{"version":3,"sources":["components/BVTIntro/instruction2-image1.png","components/BVTIntro/instruction3-image1.png","components/Loading/ajax-loader.gif","components/TaskManager/Landing.js","components/WBManager/components/RadioRange/RadioRange.js","components/QualityCheckSurvey/QualityCheckSurvey.js","components/ErrorPage/ErrorPage.js","components/BVTIntro/BVTIntroCopy.js","components/BVTIntro/BVTIntro.js","components/ExpIntro/ExpIntro.js","components/ExperimentBlock/jsPsychPlugins/ms-selection-response.js","components/ExperimentBlock/experimentUtils.js","components/ExperimentBlock/PointsTracker.js","components/ExperimentBlock/timelineDefintions.js","components/ExperimentBlock/timings.js","components/ExperimentBlock/ExperimentBlock.js","components/ExperimentBlock/blockAssessmentItems.js","components/ExperimentBlock/staircase.js","components/ExperimentManager/ExperimentManager.js","components/Debriefing/Debriefing.js","components/Loading/Spinner.js","components/TaskManager/TaskManager.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Landing","state","loadingError","searchParams","URLSearchParams","window","location","search","urlParams","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","missingParams","filter","param","length","this","setState","concat","join","_this$props","props","submitUrlParameters","finishStep","react_default","a","createElement","className","JSON","stringify","Component","RadioRange","rangeMin","currentValue","rangeMax","handleRadioChange","name","options","reversed","n","push","toString","map","o","key","type","id","checked","onChange","htmlFor","Legend","EngagementLegend","ErrorPage","React","console","log","debugInfo","Intro1","_ref","socialIssue","advanceStep","charityStatement","position","position_statements","for_statement","alternate_statement","anticharityStatement","onClick","Intro2","_ref2","src","intro2Image1Src","alt","Intro3","_ref3","intro3Image1Src","BVTIntro","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","steps","stepIndex","bind","assertThisInitialized","arguments","completeIntro","showing","BVTIntroCopy_Intro1","BVTIntroCopy_Intro2","BVTIntroCopy_Intro3","ExpIntro","jsPsych","plugins","plugin","info","description","parameters","prompt","parameterType","STRING","pretty_name","default","trial","display_element","response","rt","selection","new_html","labels","innerHTML","drawSelection","querySelector","keyboardListener","pluginAPI","getKeyboardResponse","callback_function","cancelKeyboardResponse","trial_data","finishTrial","end_trial","valid_responses","rt_method","persist","allow_held_key","KeyLogger","keyLog","logger","event","keyCode","shuffle","arr","randIndex","tempValue","currentIndex","Math","floor","random","randomFromInterval","min","max","step","range","PointsDistribution","settings","total","Error","numTrials","minValue","maxValue","mean","values","initValues","currentTotal","val","_this$settings","round","deltas","numPairs","i","delta","newLower","newUpper","checkMark","xMark","getProtestorSign","signPos","dollar","points","out","signPoints","toUpperCase","getTrialInstructions","condition","blockIndex","data","instructions","stimulus","copy","practice","charity","anti-charity","self","instructionsCopy","forEach","para","blockIndexFeedback","TrialTimings","trials","trialIndex","fixation","jitteredTimings","feedback","cue","blank2","section","ExperimentBlock","pointsTracker","timeline","block","trialTimes","init_fullscreen","message","button_label","on_finish","elem","document","getElementById","classList","add","focus","staircase","pointVal","getCurrentValue","toFixed","on_start","start_time_elapsed","totalTime","absolute_trial_start","trial_duration","getCurrentTrial","response_ends_trial","point_value","presentation_duration","getCue","keyLogger","addEventListener","keylog","removeEventListener","getFixation","target","choices","_ref4","getValue","hit","blank1","_ref5","timelineData","getLastTimelineData","targetData","parse","json","pop","parseInt","slice","getBlank1","cueData","fixationData","blank1Data","autolose","noResponse","doubleTap","mark","_ref6","addResponse","getFeedback","_ref7","addValue","incrementIndex","incrementTrialIndex","getBlank2","beginTrial","endTrial","test_procedure","repetitions","q1","conditionCopy","q2questions","q2_a1","q2_a2","q2_b1","q2_b2","keys","pre_block_assessment","k","defineProperty","halt","getQ2","amount","q3","getQ3","q4questions","q4_1","q4_2","q4_3","q4_4","post_block_assessment","getQ4","end_fullscreen","fullscreen_mode","initExperiment","prevProps","init","getTimeline","onExperimentFinish","experiment","trialData","get","currentTrial","cumulativePointsOnOffer","cumulativePointsGained","trialPart","index","jspsych_timestamps","response_logs","time_elapsed","includes","target_presentation_rt","target_presentation_duration","overall_rt","total_duration","blank2_end_time_elapsed","logTrialTimings","logTrialResponses","collectTrials","successTrials","t","expData","total_score","success_rate","assessments","replace","collectAssessments","submitBlock","_this2","ref","exp","DbStaircase","firstVal","down","Array","isArray","stepSizes","responses","successiveGood","successiveBad","n_up","up","n_down","currentStepSizeIndex","reversal_indexes","currentDirection","verbosity","resp","getNextValue","incrementStepSizeIndex","detectReversal","newVal","_nextVal","dB","nextVal","pow","ExperimentManager","blocks","tempResults","randomizeBlocks","onBlockSubmit","logAction","completingStep","b","collectBlock","blockData","block_index","social_issue","title","social_issue_position","toConsumableArray","finalDuration","final_points","final_duration","block_trial_data","starting_duration","advanceBlocks","intra_condition_1","prevAssessment","pre_block","post_block","_this3","conditions","newConditions","c","getBlockAssessments","DBStaircase","components_ExperimentBlock_ExperimentBlock","Debriefing","copied","setTokenInClibboard","scrollTo","nextProps","mturkToken","submitting","el","body","appendChild","select","execCommand","removeChild","totals","rel","href","Spinner","imgSrc","TaskManager","practiceData","authentication","experimentData","qCheckSurveyData","submittingData","submittingError","noConsent","qUserID","defaultSettings","initialStepIndex","practiceStaircase","onPracticeSubmit","setIssue","experimentSubmit","submitExpData","beforeUnload","allowUnload","allowPublicSubmit","e","preventDefault","returnValue","issue","getSocialIssue","currentStep","iss","issues","pos1","Social","Position","ID","asyncToGenerator","regenerator_default","_callee","wrap","_context","prev","qtrixStart","sent","mturkID","objectSpread","stop","rt_min","postData","study_id","axios","post","_context2","t0","action","timezoneOffset","Date","getTimezoneOffset","log_filename","_context3","defaults","headers","common","token","_context4","tdata","trial_index","block_data","submission","filename","filepath","filetype","submitData","components_Loading_Spinner","Landing_Landing","components_BVTIntro_BVTIntro","components_ExpIntro_ExpIntro","components_ExperimentManager_ExperimentManager","components_Debriefing_Debriefing","debriefSubmit","components_ErrorPage_ErrorPage","msg","App","components_TaskManager_TaskManager","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"s1BAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,oECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0r6CCEnBC,6MAEnBC,MAAQ,CACNC,cAAc,sFAId,IAEMC,EAAe,IAAIC,gBAAgBC,OAAOC,SAASC,QACnDC,EAAY,GAJAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAMlB,QAAAC,EAAAC,EAAcX,EAAdY,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAA4B,KAAnBV,EAAmBc,EAAAM,MAC1BX,EAAUT,EAAE,IAAMA,EAAE,IAPJ,MAAAqB,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAUlB,IAAMW,EATiB,CAAC,SAAU,WAAY,MASTC,OAAO,SAAAC,GAAK,QAAMA,KAAShB,KAEhE,GAAIc,EAAcG,OAChBC,KAAKC,SAAS,CAACzB,aAAY,2CAAA0B,OAA6CN,EAAcO,KAAK,aAExF,KAAAC,EACyCJ,KAAKK,MAAzCC,EADLF,EACKE,oBAAqBC,EAD1BH,EAC0BG,WAC7BD,EAAoBxB,GACpByB,sCAKA,OAAIP,KAAKzB,MAAMC,aAEXgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,KAAKC,UAAUb,KAAKzB,MAAMC,aAAc,KAAM,MAOhFgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,KAAKC,UAAUb,KAAKzB,MAAO,KAAM,aA5CxCuC,oBCiDtBC,SA/CI,SAACV,GAAU,IAE1BW,EAMEX,EANFW,SACAC,EAKEZ,EALFY,aACAC,EAIEb,EAJFa,SACAC,EAGEd,EAHFc,kBACAC,EAEEf,EAFFe,KAIEC,EAAU,GACd,GAHIhB,EADFiB,SAKA,IAAK,IAAIC,EAAEL,EAAUK,GAAKP,EAAUO,IAClCF,EAAQG,KAAKD,EAAEE,iBAIjB,IAAK,IAAIF,EAAEP,EAAUO,GAAKL,EAAUK,IAClCF,EAAQG,KAAKD,EAAEE,YAInB,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAEMW,EAAQK,IAAI,SAAAC,GAAC,OACTnB,EAAAC,EAAAC,cAAA,MAAIkB,IAAKD,EAAGhB,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBACbkB,KAAK,QACLT,KAAMA,EACNU,GAAE,GAAA5B,OAAKkB,EAAL,KAAAlB,OAAayB,GACflC,MAAOkC,EACPI,QAASd,IAAeU,EACxBK,SAAUb,IAEdX,EAAAC,EAAAC,cAAA,SAAOuB,QAAO,GAAA/B,OAAKkB,EAAL,KAAAlB,OAAayB,GAAKhB,UAAU,oBACvCgB,UCrCfO,SAAS,kBACb1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,mCAIEyB,EAAmB,kBACvB3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,0BCGW0B,GDCkBC,IAAMvB,2LCXnC,OAFAwB,QAAQC,IAAIvC,KAAKK,MAAMmC,WAGrBhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,iDARcI,gDCEX2B,EAAS,SAAAC,GAAgC,IAA9BC,EAA8BD,EAA9BC,YAAaC,EAAiBF,EAAjBE,YAC7BC,EAAmBF,EAAYG,SAAW,EAAIH,EAAYI,oBAAoBC,cAAgBL,EAAYI,oBAAoBE,oBAC9HC,EAAuBP,EAAYG,SAAW,EAAIH,EAAYI,oBAAoBE,oBAAsBN,EAAYI,oBAAoBC,cAE9I,OACExC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,mCACkCH,EAAAC,EAAAC,cAAA,WADlC,kBAIAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,mBAAH,oEACAH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,8DACHH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,2CAAJ,4FACAH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,yDAAJ,wFAA6KkC,EAA7K,KACArC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,+DAAJ,+GAA0MkC,EAA1M,eAAwOK,EAAxO,KACA1C,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,mCAAJ,gHAEFH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,qHACHH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,uWACHH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAawC,QAAS,kBAAMP,MAA9C,WAMKQ,EAAS,SAAAC,GAAmB,IAAjBT,EAAiBS,EAAjBT,YACtB,OACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,iCAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,OAAK4C,IAAKC,IAAiBC,IAAI,yBAC7DhD,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,iBAAJ,uJACAH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,cAAJ,yFACAH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,WAAJ,+CAAqFH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,4GAArF,yPACAH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,cAAJ,2GAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAawC,QAAS,kBAAMP,GAAY,KAA1D,YACApC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAawC,QAAS,kBAAMP,MAA9C,WAMKa,EAAS,SAAAC,GAAmB,IAAjBd,EAAiBc,EAAjBd,YAEtB,OACEpC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,4BAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAeH,EAAAC,EAAAC,cAAA,OAAK4C,IAAKK,IAAiBH,IAAI,yBAC7DhD,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,mBAAJ,gFAA8HH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,6BAA9H,wEAA0PH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,8BAA1P,yBACAH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,mBAAJ,oFACAH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,mBAAH,wEAAqHH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,wBACrHH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,0DAA8EH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,WAA9E,kBAAuIH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,cAAvI,KAAH,mJACAH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,wDACLH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,iEAGJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,aAAJ,gKACAH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,UAAJ,kEAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAawC,QAAS,kBAAMP,GAAY,KAA1D,YACApC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAawC,QAAS,kBAAMP,MAA9C,WClBOgB,qBA/Cb,SAAAA,EAAYvD,GAAO,IAAAwD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9D,KAAA4D,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9D,KAAA8D,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlE,KAAMK,KAVR9B,MAAQ,CACN4F,MAAO,CACL,SACA,SACA,UAEFC,UAAW,GAKXP,EAAKjB,YAAciB,EAAKjB,YAAYyB,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFFA,yEAMjB,OAAO7D,KAAKzB,MAAM4F,MAAMnE,KAAKzB,MAAM6F,iDAGTG,UAAAxE,OAAA,QAAAb,IAAAqF,UAAA,IAAAA,UAAA,GAEpBvE,KAAKzB,MAAM6F,UAAY,GACzBpE,KAAKC,SAAS,CAACmE,UAAWpE,KAAKzB,MAAM6F,UAAY,IAKjDpE,KAAKzB,MAAM6F,UAAYpE,KAAKzB,MAAM4F,MAAMpE,OAAS,EACnDC,KAAKC,SAAS,CAACmE,UAAWpE,KAAKzB,MAAM6F,UAAY,IAGjDpE,KAAKK,MAAMmE,iDAKb,MAAuB,WAAnBxE,KAAKyE,UAELjE,EAAAC,EAAAC,cAACgE,EAAD,CAAQ/B,YAAa3C,KAAKK,MAAMsC,YAAaC,YAAa5C,KAAK4C,cAI5C,WAAnB5C,KAAKyE,UAELjE,EAAAC,EAAAC,cAACiE,EAAD,CAAQhC,YAAa3C,KAAKK,MAAMsC,YAAaC,YAAa5C,KAAK4C,cAI5C,WAAnB5C,KAAKyE,UAELjE,EAAAC,EAAAC,cAACkE,EAAD,CAAQjC,YAAa3C,KAAKK,MAAMsC,YAAaC,YAAa5C,KAAK4C,mBAFnE,SAhDmB9B,cCqBR+D,mLArBX,OACErE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,gDACAH,EAAAC,EAAAC,cAAA,iDACAF,EAAAC,EAAAC,cAAA,kGACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,iCAEFF,EAAAC,EAAAC,cAAA,kVACAF,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,aAAawC,QAASnD,KAAKK,MAAMuC,aAAnD,iBAhBa9B,aCFjBgE,iCAAUnG,OAAOmG,SAGvBA,EAAQC,QAAQ,yBAA4B,WAC1C,IAAIC,EAAS,GAoHb,OAlHAA,EAAOC,KAAO,CACZ7D,KAAM,wBACN8D,YAAa,GACbC,WAAY,CACVC,OAAQ,CACNvD,KAAMiD,EAAQC,QAAQM,cAAcC,OACpCC,YAAa,SACbC,QAAS,KACTN,YAAa,oBAKnBF,EAAOS,MAAQ,SAASC,EAAiBD,GACvC,IAAIE,EAAW,CACbC,GAAI,KACJC,UAAW,MAETC,EAAW,4CAA8CL,EAAML,OAAS,SAC5EU,GAAY,0CACZA,GAAQ,sIAAA5F,OAKMuF,EAAMM,OAAO,GALnB,mIAAA7F,OASMuF,EAAMM,OAAO,GATnB,mIAAA7F,OAaMuF,EAAMM,OAAO,GAbnB,kIAAA7F,OAiBMuF,EAAMM,OAAO,GAjBnB,mIAAA7F,OAqBMuF,EAAMM,OAAO,GArBnB,gIA2BRD,GAAY,gFAGZJ,EAAgBM,UAAYF,EAE5B,IAAIG,EAAgB,WACdP,EAAgBQ,cAAc,mCAChCR,EAAgBQ,cAAc,iCAAiCvF,UAAY,uBAE7E+E,EAAgBQ,cAAhB,6BAAAhG,OAA2DyF,EAASE,YAAalF,UAAY,gCAgD3FwF,EAAmBrB,EAAQsB,UAAUC,oBAAoB,CAC3DC,kBAZmB,SAASrB,GACX,KAAbA,EAAKrD,KA1BJ+D,EAASE,WAAoC,IAAvBF,EAASE,UAIlCF,EAASE,YAHTF,EAASE,UAAY,EAKvBI,KAuBsB,KAAbhB,EAAKrD,KAtCT+D,EAASE,WAAoC,IAAvBF,EAASE,UAIlCF,EAASE,YAHTF,EAASE,UAAY,EAKvBI,KAmCsB,KAAbhB,EAAKrD,KAAc+D,EAASE,WAvBvB,WAEkB,qBAArBM,GACTrB,EAAQsB,UAAUG,uBAAuBJ,GAG3CT,EAAgBM,UAAY,GAE5B,IAAIQ,EAAa,CACfZ,GAAMD,EAASC,GACfC,UAAaF,EAASE,WAGxBf,EAAQ2B,YAAYD,GAWlBE,IAKFC,gBAAiB,CAAC,QAAS,YAAa,cACxCC,UAAW,OACXC,SAAS,EACTC,gBAAgB,KAKb9B,EArHmC,OCJtC+B,mDACJC,OAAS,QACTC,OAAS,SAACC,GAEc,KAAlBA,EAAMC,SACRtD,EAAKmD,OAAOxF,KAAK0F,EAAMC,WAKvBC,EAAU,SAASC,GAIvB,IAHA,IACIC,EAAWC,EADXC,EAAeH,EAAItH,OAGC,IAAjByH,GACLF,EAAYG,KAAKC,MAAMD,KAAKE,SAAWH,GAGvCD,EAAYF,IAFZG,GAGAH,EAAIG,GAAgBH,EAAIC,GACxBD,EAAIC,GAAaC,EAEnB,OAAOF,GAeHO,EAAqB,SAACC,EAAKC,GAAgB,IAAXC,EAAWxD,UAAAxE,OAAA,QAAAb,IAAAqF,UAAA,GAAAA,UAAA,GAAN,EACnCyD,GAASF,EAAMD,GAAOE,EAC5B,OAAOF,EAAMJ,KAAKC,MAAMD,KAAKE,SAAWK,GAASD,eC6BpCE,aAhEb,SAAAA,IAAyB,IAAbC,EAAa3D,UAAAxE,OAAA,QAAAb,IAAAqF,UAAA,GAAAA,UAAA,GAAJ,GACnB,GADuBT,OAAAC,EAAA,EAAAD,CAAA9D,KAAAiI,GACO,kBAAnBC,EAASC,MAClB,MAAM,IAAIC,MAAM,wCAElB,GAAkC,kBAAvBF,EAASG,UAClB,MAAM,IAAID,MAAM,4CAElB,GAAiC,kBAAtBF,EAASI,SAClB,MAAM,IAAIF,MAAM,2CAElB,GAAiC,kBAAtBF,EAASK,SAClB,MAAM,IAAIH,MAAM,2CAGlBpI,KAAKkI,SAAWA,EAChBlI,KAAKwI,KAAON,EAASC,MAAQD,EAASG,UACtCrI,KAAKyI,OAAS,GACdzI,KAAK0I,aACL1I,KAAK2I,aAAe,EACpB3I,KAAKwH,aAAe,gEAIpB,OAAOxH,KAAKyI,OAAOzI,KAAKwH,uDAIxBxH,KAAKwH,cAAgB,mCAGdoB,GACP5I,KAAK2I,cAAgBC,uCAIV,IAAAC,EAC+B7I,KAAKkI,SAAvCG,EADGQ,EACHR,UAAWC,EADRO,EACQP,SAAUC,EADlBM,EACkBN,SACvBC,EAAOf,KAAKqB,MAChB,KAAOP,EAAWD,GAAY,GAC9B,IAEF,GAAIE,IAASxI,KAAKwI,KAGhB,MAFAlG,QAAQC,IAAI,UAAWiG,GACvBlG,QAAQC,IAAI,UAAWvC,KAAKwI,MACtB,IAAIJ,MAAM,uGAOlB,IALA,IAAMK,EAAS,CAACD,GAEVO,EAASf,gBAAM,IAAMQ,EAAM,KAC3BQ,GAAYX,EAAY,GAAG,EAExBY,EAAE,EAAGA,EAAED,EAAUC,IAAK,CAC7B,IAAIC,EAAQH,EAAOnB,EAAmB,EAAGmB,EAAOhJ,SAChDmJ,EAAQzB,KAAKqB,MAAc,IAARI,GAAa,IAEhC,IAAMC,EAAW1B,KAAKqB,MAAuB,KAAhBN,EAAOU,IAAc,IAC5CE,EAAW3B,KAAKqB,MAAuB,KAAhBN,EAAOU,IAAc,IAClDT,EAAOjH,KAAK2H,GACZV,EAAOjH,KAAK4H,GAEdpJ,KAAKyI,OAASrB,EAAQqB,YC9DpB3D,EAAUnG,OAAOmG,QACjBuE,EAAS,SACTC,EAAK,SA+CX,SAASC,EAAiBC,EAAS3H,EAAM4H,EAAQC,GAC/C,IAAIC,EAAG,yDACP,GAAID,EAAQ,CACV,IAAME,EAAaH,EAAM,KAAAvJ,OAAQwJ,GAAR,GAAAxJ,OAAsBwJ,GAC/CC,GAAG,oCAAAzJ,OAAwC0J,EAAxC,UAIL,OAFAD,GAAG,4CAAAzJ,OAAgDsJ,EAAhD,YAAAtJ,OAAkE2B,EAAKgI,cAAvE,UACHF,GAAG,eAIL,SAASG,EAAqBC,EAAWC,GACvC,MAAO,CACLnI,KAAM,yBACNoI,KAAM,CAAEC,cAAc,GACtBC,SAAU,WACR,IAAIC,EAAI,IA7Dd,SAAA1H,GAA+C,IAApBb,EAAoBa,EAApBb,KAAMc,EAAcD,EAAdC,YAC3BE,EAAmB,GACnBK,EAAuB,GAwC3B,OAvCIP,IACFE,EAAmBF,EAAYG,SAAW,EAAIH,EAAYI,oBAAoBC,cAAgBL,EAAYI,oBAAoBE,oBAC9HC,EAAuBP,EAAYG,SAAW,EAAIH,EAAYI,oBAAoBE,oBAAsBN,EAAYI,oBAAoBC,eAG7H,CACXqH,SAAY,ikBAKZX,OAAU,oQAAAxJ,OAGsGmJ,EAHtG,oDAAAnJ,OAGkKmJ,EAHlK,wHAAAnJ,OAImGoJ,EAJnG,uEAOVgB,QAAW,8DAAApK,OACoD2C,EADpD,+JAAA3C,OAEqGmJ,EAFrG,8EAAAnJ,OAE2L2C,EAF3L,sGAAA3C,OAGwFoJ,EAHxF,8FAMXiB,eAAgB,kEAAArK,OACmDgD,EADnD,kKAAAhD,OAEmGmJ,EAFnG,qFAAAnJ,OAEgMgD,EAFhM,+GAAAhD,OAG4FoJ,EAH5F,uRAAApJ,OAK8JgD,EAL9J,wBAAAhD,OAKyM2C,EALzM,UAOhB2H,KAAQ,gOAAAtK,OAEwGmJ,EAFxG,uHAAAnJ,OAG6EoJ,EAH7E,2FAQEzH,IAoBR4I,CAAiBV,GAAWW,QAAQ,SAAAC,GAClCP,GAAI,MAAAlK,OAAUyK,EAAV,UAEN,IAAMnB,EAA6B,iBAAnBO,EAAUlI,KAAV,gBACV+I,EAAwC,aAAnBb,EAAUlI,KAAV,qCAAA3B,OAAuE8J,EAAa,EAApF,sBAC3B,MACE,iEAAA9J,OAC8B6J,EAAUlI,KADxC,MAEI0H,EAAiBC,EAASO,EAAUlI,MACpC+I,EAHJ,qBAAA1K,OAIyBkK,EAJzB,0ECpCOS,aA1Bb,SAAAA,EAAY3C,GAAWpE,OAAAC,EAAA,EAAAD,CAAA9D,KAAA6K,GAAA7K,KAXvB8K,OAAS,GAYP9K,KAAK+K,WAAa,EAClB/K,KAAKkI,SAAWA,EAEhB,IAAK,IAAIe,EAAE,EAAGA,EAAGf,EAASG,UAAWY,IAAK,CACxC,IAAM+B,EAAWhL,KAAKkI,SAAS+C,gBAAgBhC,GAAG+B,SAC5CE,EAAWlL,KAAKkI,SAAS+C,gBAAgBhC,GAAGiC,SAElDlL,KAAK8K,OAAOtJ,KAAK,CACf2J,IAAK,IACLH,SAAUA,EACVE,SAAUA,EACVE,OAAQ,mEAKEC,GACd,OAAOrL,KAAK8K,OAAO9K,KAAK+K,YAAYM,iDAIpCrL,KAAK+K,sBCLHjG,SAAUnG,OAAOmG,SA6GRwG,6MAzGbC,cAAgB,kFAGd,IAAMC,EAAW,GADLpL,EAE8CJ,KAAKK,MAAvD4K,EAFI7K,EAEJ6K,gBAAiBQ,EAFbrL,EAEaqL,MAAOpD,EAFpBjI,EAEoBiI,UAAW2B,EAF/B5J,EAE+B4J,WAC3ChK,KAAKuL,cAAgB,IAAItD,EAAmB,CAC1CE,MAAO,IACPG,SAAU,IACVC,SAAU,IACVF,UAAW,KAEb,IAAMqD,EAAa,IAAIb,EAAa,CAClCxC,YACA4C,oBAIF,GAAIQ,EAAME,gBAAiB,CACzB,IAAMA,EFsRS,CACjB9J,KAAM,aACNoI,KAAM,CAAE0B,iBAAiB,GACzBC,QAAS,WAAQ,MACf,yFAGFC,aAAc,QACdC,UAAW,SAAC7B,GACV,IAAM8B,EAAOC,SAASC,eAAe,sBACrCF,EAAKG,UAAUC,IAAI,cACnBJ,EAAKK,UEhSLZ,EAAShK,KAAKmK,GAGhB,IFqFeU,EErFTnC,EAAeJ,EAAqB2B,EAAM1B,UAAWC,GACrDmB,EF+BV,SAAgBI,EAAeG,EAAY3B,GAwBzC,MAvBY,CACVlI,KAAM,yBACNsI,SAAU,WACR,IAAMX,EAA6B,iBAAnBO,EAAUlI,KAAV,gBACVyK,EAAWf,EAAcgB,kBAAkBC,QAAQ,GACzD,MACE,oBACEjD,EAAiBC,EAASO,EAAUlI,KAA0B,WAAnBkI,EAAUlI,KAAoByK,GAD3E,UAKJrC,KAAM,CAAEkB,KAAK,GACbsB,SAAU,SAAApJ,GAAY,IAAV4G,EAAU5G,EAAV4G,KACVA,EAAKyC,mBAAqB5H,EAAQ6H,YAClC1C,EAAK2C,qBAAuB9H,EAAQ6H,aAEtCE,eAAgB,kBAAMnB,EAAWoB,gBAAgB,QACjDC,qBAAqB,EACrBjB,UAAW,SAAC7B,GACVA,EAAK+C,YAAczB,EAAcgB,kBACjCtC,EAAKgD,sBAAwBvB,EAAWoB,gBAAgB,SEpD9CI,CAAOlN,KAAKuL,cAAeG,EAAYD,EAAM1B,WACnDiB,EFyDV,SAAqBU,GACnB,IAAIyB,EAAY,KAsBhB,MArBmB,CACjBtL,KAAM,yBACNsI,SAAU,wCACV4C,qBAAqB,EACrB9C,KAAM,CAACe,UAAU,GACjByB,SAAU,SAAA/I,GAAY,IAAVuG,EAAUvG,EAAVuG,KACVkD,EAAY,IAAIpG,EAChBiF,SAASoB,iBAAiB,QAASD,EAAUlG,QAG7CgD,EAAKyC,mBAAqB5H,EAAQ6H,aAEpCE,eAAgB,kBAAMnB,EAAWoB,gBAAgB,aACjDhB,UAAW,SAAS7B,GAClBA,EAAKoD,OAASF,EAAUnG,OACxBiD,EAAKgD,sBAAwBjN,KAAK6M,eAElCb,SAASsB,oBAAoB,QAASH,EAAUlG,UE5EjCsG,CAAY7B,GACvB8B,GFkFSnB,EElFUrM,KAAKK,MAAMgM,UFmFvB,CACbxK,KAAM,yBACNsI,SAAU,uGACVsD,QAAS,CAAC,SACVxD,KAAM,CAACuD,QAAQ,GACff,SAAU,SAAAiB,GAAYA,EAAVzD,KACLyC,mBAAqB5H,EAAQ6H,aAEpCE,eAAgB,WAAQ,OAAOR,EAAUsB,YACzC7B,UAAW,SAAS7B,GAClBA,EAAK2D,MAAM3D,EAAKrE,GAChBqE,EAAKgD,sBAAwBjN,KAAK6M,kBE7F9BgB,EFyGV,SAAmBnC,GACjB,IAAIyB,EAAY,KAqChB,MApCe,CACbtL,KAAM,yBACNsI,SAAU,cACV4C,qBAAqB,EACrB9C,KAAM,CAAC4D,QAAQ,GACfpB,SAAU,SAAAqB,GAAY,IAAV7D,EAAU6D,EAAV7D,KACVkD,EAAY,IAAIpG,EAChBiF,SAASoB,iBAAiB,QAASD,EAAUlG,QAG7CgD,EAAKyC,mBAAqB5H,EAAQ6H,aAEpCE,eAAgB,WACd,IAAMkB,EAAejJ,EAAQmF,KAAK+D,sBAC5BC,EAAarN,KAAKsN,MACtBH,EAAalO,OAAO,CAAC2N,QAAQ,IAAOW,QACpCC,MACF,OAAIH,EAAWrI,GACN,IAAOyI,SAASJ,EAAWrI,IAG3B,IAAOqI,EAAWhB,uBAG7BnB,UAAW,SAAS7B,GAClBA,EAAKgD,sBAAwBjN,KAAK6M,eAClC,IAAMkB,EAAejJ,EAAQmF,KAAK+D,sBAC5BC,EAAarN,KAAKsN,MACtBH,EAAalO,OAAO,CAAC2N,QAAQ,IAAOW,QACpCC,MACFnE,EAAKoD,OAASY,EAAWrI,GAAKuH,EAAUnG,OAAOsH,MAAM,GAAKnB,EAAUnG,OAEpEgF,SAASsB,oBAAoB,QAASH,EAAUlG,UE3InCsH,GACTrD,EFiJV,SAAqBQ,EAAY3B,EAAWsC,GAgF1C,MA/EiB,CACfxK,KAAM,yBACNsI,SAAU,WACR,IAAM4D,EAAejJ,EAAQmF,KAAK+D,sBAE5BQ,EAAU5N,KAAKsN,MACnBH,EAAalO,OAAO,CAACsL,KAAK,IAAOgD,QACjCC,MACIK,EAAe7N,KAAKsN,MACxBH,EAAalO,OAAO,CAACmL,UAAU,IAAOmD,QACtCC,MACIH,EAAarN,KAAKsN,MACtBH,EAAalO,OAAO,CAAC2N,QAAQ,IAAOW,QACpCC,MACIM,EAAa9N,KAAKsN,MACtBH,EAAalO,OAAO,CAACgO,QAAQ,IAAOM,QACpCC,MAGEO,GAAW,EACTC,GAAeH,EAAa7I,KAAOqI,EAAWrI,KAAO8I,EAAW9I,GAChEiJ,EAAaZ,EAAWrI,IAAM8I,EAAW9I,IAC3C6I,EAAapB,OAAOtN,QAAU2O,EAAWrB,OAAOtN,OAAS,GAAK8O,GAAaD,KAC7ED,GAAW,GAGb,IAAMrC,EAAWkC,EAAQxB,YAAYR,QAAQ,GAEzCZ,EAAUqC,EAAWL,IAAM,OAAS,QACpCkB,EAAOb,EAAWL,IAAMvE,EAAYC,EACpCqF,IACF/C,EAAU,QACVkD,EAAOxF,GAET,IAAI4B,EAA8B,WAAnBnB,EAAUlI,KAAV,WAIf,OAHAqJ,GAAYoB,EAAW,IACvBpB,GAAY4D,EAGV,0DAAA5O,OACmC0L,EADnC,0CAAA1L,OAEkCgL,EAFlC,oBAMJjB,KAAM,CAAEiB,UAAU,GAClB6B,qBAAqB,EACrBN,SAAU,SAAAsC,GAAYA,EAAV9E,KACLyC,mBAAqB5H,EAAQ6H,aAEpCb,UAAW,SAAC7B,GACV,IAAM8D,EAAejJ,EAAQmF,KAAK+D,sBAC5BS,EAAe7N,KAAKsN,MACxBH,EAAalO,OAAO,CAACmL,UAAU,IAAOmD,QACtCC,MACIH,EAAarN,KAAKsN,MACtBH,EAAalO,OAAO,CAAC2N,QAAQ,IAAOW,QACpCC,MACIM,EAAa9N,KAAKsN,MACtBH,EAAalO,OAAO,CAACgO,QAAQ,IAAOM,QACpCC,MAGEO,GAAW,EACTC,GAAeH,EAAa7I,KAAOqI,EAAWrI,KAAO8I,EAAW9I,GAChEiJ,EAAaZ,EAAWrI,IAAM8I,EAAW9I,IAC3C6I,EAAapB,OAAOtN,QAAU2O,EAAWrB,OAAOtN,OAAS,GAAK8O,GAAaD,KAC7ED,GAAW,GAGb1E,EAAK0E,SAAWA,EAEXA,GACHtC,EAAU2C,YAAYf,EAAWL,MAIrCf,eAAgB,kBAAMnB,EAAWoB,gBAAgB,cE/NhCmC,CAAYvD,EAAYD,EAAM1B,UAAW/J,KAAKK,MAAMgM,WAC/DjB,EFmOV,SAAmBM,EAAYH,GAqC7B,MApCe,CACb1J,KAAM,yBACNsI,SAAU,cACV4C,qBAAqB,EACrB9C,KAAM,CAACmB,QAAQ,GACfyB,eAAgB,kBAAMnB,EAAWoB,gBAAgB,WACjDL,SAAU,SAAAyC,GAAYA,EAAVjF,KACLyC,mBAAqB5H,EAAQ6H,aAEpCb,UAAW,SAAS7B,GAClBA,EAAKgD,sBAAwBjN,KAAK6M,eAElC,IAAMkB,EAAejJ,EAAQmF,KAAK+D,sBAC5BQ,EAAU5N,KAAKsN,MACnBH,EAAalO,OAAO,CAACsL,KAAK,IAAOgD,QACjCC,MACIK,EAAe7N,KAAKsN,MACxBH,EAAalO,OAAO,CAACmL,UAAU,IAAOmD,QACtCC,MACIH,EAAarN,KAAKsN,MACtBH,EAAalO,OAAO,CAAC2N,QAAQ,IAAOW,QACpCC,MACIM,EAAa9N,KAAKsN,MACtBH,EAAalO,OAAO,CAACgO,QAAQ,IAAOM,QACpCC,MAGEH,EAAWL,OACXa,EAAapB,OAAOtN,QAAU2O,EAAWrB,OAAOtN,QAAU,IAC1DwL,EAAc4D,SAASX,EAAQxB,aAEnCzB,EAAc6D,iBACd1D,EAAW2D,wBEpQEC,CAAU5D,EAAY1L,KAAKuL,eAE1CJ,EAAIlB,KAAKsF,YAAa,EACtBnE,EAAOnB,KAAKuF,UAAW,EACvB,IChEWzF,EDgEL0F,EAAiB,CACrBjE,SAAU,CAACL,EAAKH,EAAUwC,EAAQK,EAAQ3C,EAAUE,GACpDsE,YAAarH,GAiBf,GAdAmD,EAAShK,KAAK0I,GAEV,yBAA0BuB,IAC5BD,EAAShK,MCxEAuI,EDwEW0B,EAAM1B,UCvEnB,CACTlI,KAAM,wBACNuD,OAAQ,WAON,4CAAAlF,OANsB,CACpBoK,QAAW,8BACXC,eAAgB,iCAChBC,KAAQ,0BACRd,OAAU,eAE+CK,EAAUlI,QAEvEkE,OAAQ,CAAC,aAAc,GAAI,WAAY,GAAI,aAC3CkE,KAAM,CAAC0F,IAAI,GACX7D,UAAW,SAAS7B,GAClBA,EAAKtE,SAAWsE,EAAKpE,cD0DrB2F,EAAShK,KCnDf,SAAeiK,GACb,IAAMD,EAAW,GAEXoE,EAAgB,CACpBtF,QAAW,2BACXC,eAAgB,oCAChBC,KAAQ,6BACRd,OAAU,kBAENmG,EAAc,CAClBC,MAAS,qCACTC,MAAS,0BACTC,MAAS,2BACTC,MAAS,2BAiCX,OA7BAnM,OAAOoM,KAAKzE,EAAM0E,sBAAsBzF,QAAQ,SAAA0F,GACpC,OAANA,GACF5E,EAAShK,KAAK,CACZK,KAAM,wBACNuD,OAAQ,WACN,MACE,0BAAAlF,OAA0B0P,EAAcnE,EAAM1B,UAAUlI,MAAxD,uBAAA3B,OACM2P,EAAYO,GADlB,SAIJrK,OAAQ,CAAC,aAAc,GAAI,WAAY,GAAI,aAC3CkE,KAAKnG,OAAAuM,EAAA,EAAAvM,CAAA,GAAGsM,GAAI,GACZtE,UAAW,SAAS7B,GAClBA,EAAKtE,SAAWsE,EAAKpE,eAO7B2F,EAAShK,KAAK,CACZK,KAAM,yBACNsI,SAAU,iBACR,sFAIFF,KAAM,CAAEqG,MAAM,KAET,CAAE9E,YDKS+E,CAAM9E,KAGtBD,EAAShK,KAAKiO,GAEV,0BAA2BhE,IAC7BD,EAAShK,KCRf,SAAeuI,EAAWwB,GAmCxB,MAlCW,CACT1J,KAAM,wBACNuD,OAAQ,WACN,IAAI8F,EACEsF,EAASjF,EAAc5C,aAAa6D,QAAQ,GAClD,OAAQzC,EAAUlI,MAChB,IAAK,OACHqJ,EAAQ,8BAAAhL,OAAiCsQ,EAAjC,kBACR,MACF,IAAK,SACHtF,EAAQ,6BAAAhL,OAAgCsQ,EAAhC,YACR,MACF,IAAK,UACHtF,EAAQ,8BAAAhL,OAAiCsQ,EAAjC,sBACR,MACF,IAAK,eACHtF,EAAQ,+BAAAhL,OAAkCsQ,EAAlC,4BAMZ,MACE,MAAAtQ,OAAMgL,EAAN,2DAIJnF,OAAQ,CAAC,aAAc,GAAI,WAAY,GAAI,aAC3CkE,KAAM,CAACwG,IAAI,GACX3E,UAAW,SAAS7B,GAClBA,EAAKtE,SAAWsE,EAAKpE,YDvBP6K,CAAMjF,EAAM1B,UAAW/J,KAAKuL,gBAC1CC,EAAShK,KC6Bf,SAAeiK,GACb,IAAMD,EAAW,GAEXmF,EAAc,CAClBC,KAAQ,kBACRC,KAAQ,+CACRC,KAAQ,UACRC,KAAQ,2CAuBV,OAnBAjN,OAAOoM,KAAKzE,EAAMuF,uBAAuBtG,QAAQ,SAAA0F,GACrC,OAANA,GACF5E,EAAShK,KAAK,CACZK,KAAM,wBACNuD,OAAQ,WACN,MACE,oGAAAlF,OACayQ,EAAYP,GADzB,SAIJrK,OAAQ,CAAC,aAAc,GAAI,WAAY,GAAI,aAC3CkE,KAAKnG,OAAAuM,EAAA,EAAAvM,CAAA,GAAGsM,GAAI,GACZtE,UAAW,SAAS7B,GAClBA,EAAKtE,SAAWsE,EAAKpE,eAMtB,CAAE2F,YD3DSyF,CAAMxF,KAGlBA,EAAMyF,eAAgB,CACxB,IAAMA,EFsQH,CACLrP,KAAM,aACNsP,iBAAiB,GEvQf3F,EAAShK,KAAK0P,GAGhB,OAAO1F,8CAIPxL,KAAKoR,4DAGYC,GACbrR,KAAKK,MAAM0J,YAAcsH,EAAUtH,WACrC/J,KAAKoR,0DAKPtM,EAAQwM,KAAK,CACX9F,SAAUxL,KAAKuR,cACfzF,UAAW9L,KAAKwR,mBAAmBnN,KAAKrE,MACxC0F,gBAAiB,uBAEnB1F,KAAKyR,WAAWrF,qDAIhB,IAAMsF,EAAY9Q,KAAKsN,MACrBpJ,EAAQmF,KAAK0H,MAAMxD,QAGfrD,EJzDY,SAAC4G,GACrB,IAAM5G,EAAS,GACX8G,EAAe,KACf7G,EAAa,EACb8G,EAA0B,EAC1BC,EAAyB,EAuE7B,OAtEAJ,EAAUhH,QAAS,SAACqH,UACTA,EAAU5H,SAEb4H,EAAUxC,aACVqC,EAAe,CACbI,MAAOjH,IACPkH,mBAAoB,GACpBC,cAAe,CACblH,SAAU,EACVwC,OAAQ,EACRK,OAAQ,GAEVjB,qBAAsBmF,EAAUnF,uBAItC,CACE,MACA,WACA,SACA,SACA,WACA,UACAlC,QAAQ,SAACnJ,GACLwQ,EAAUxQ,KACZqQ,EAAaK,mBAAb,GAAA/R,OAAmCqB,EAAnC,wBAA6DwQ,EAAUrF,mBACvEkF,EAAaK,mBAAb,GAAA/R,OAAmCqB,EAAnC,sBAA2DwQ,EAAUI,aAEjErO,OAAOoM,KAAK6B,GAAWK,SAAS,YAClCR,EAAaM,cAAc3Q,IAAMwQ,EAAU1E,OAAOtN,WAMpDgS,EAAUvE,SACZoE,EAAahE,IAAMmE,EAAUnE,IAC7BgE,EAAaM,cAAc1E,QAAUoE,EAAahE,IAAM,EAAI,EAC5DgE,EAAaS,uBAAyBN,EAAUnM,GAChDgM,EAAaU,6BAA+BP,EAAU9E,uBAGpD8E,EAAUlE,SACZ+D,EAAaW,WAAaX,EAAaS,wBAClCT,EAAaW,YAAcR,EAAUnM,KACxCgM,EAAaW,WAAaX,EAAaU,6BAA+BP,EAAUnM,KAIhFmM,EAAU/E,cACZ4E,EAAa5E,YAAc+E,EAAU/E,YACrC6E,GAA2BE,EAAU/E,YACrC4E,EAAaC,wBAA0BA,GAGrCE,EAAU7G,WACZ0G,EAAajD,SAAWoD,EAAUpD,UAGhCoD,EAAUvC,WACRoC,EAAahE,MAAQgE,EAAajD,WACpCmD,GAA0BF,EAAa5E,aAEzC4E,EAAaE,uBAAyBA,EAtF9C,SAAyBF,GAEvB,IAAK,IAAIhQ,KADTgQ,EAAaY,eAAiBZ,EAAaK,mBAAmBQ,wBAA0Bb,EAAahF,qBACrFgF,EAAaK,mBAC3BL,EAAahQ,GAAOgQ,EAAaK,mBAAmBrQ,UAE/CgQ,EAAaK,mBAkFdS,CAAgBd,GA9ExB,SAA2BA,GACzB,IAAK,IAAIhQ,KAAOgQ,EAAaM,cAC3BN,EAAY,GAAA1R,OAAI0B,EAAJ,mBAA2BgQ,EAAaM,cAActQ,UAE7DgQ,EAAaM,cA2EdS,CAAkBf,GAClB9G,EAAOtJ,KAAKoQ,MAIX9G,EInBU8H,CAAclB,GACvBmB,EAAgB/H,EAAOjL,OAAO,SAAAiT,GAAC,OAAIA,EAAElF,MAAQkF,EAAEnE,WAE/CoE,EAAU,CACdvM,WAAYsE,EACZkI,YAAahT,KAAKuL,cAAc5C,aAChCsK,aAAeJ,EAAc9S,OAAS+K,EAAO/K,QAE3C,0BAA2BC,KAAKK,MAAMoL,QACxCsH,EAAQG,YJad,SAA4BxB,GAC1B,IAAMwB,EAAc,GA6BpB,OA5BAxB,EAAUhH,QAAS,SAACqH,GAClB,CACE,KACA,QACA,QACA,QACA,QACA,KACA,OACA,OACA,OACA,QACArH,QAAQ,SAACnJ,GACLwQ,EAAUxQ,KACZ2R,EAAW,GAAAhT,OAAIqB,EAAJ,kBAAwBwQ,EAAUI,aAC7Ce,EAAW,GAAAhT,OAAIqB,EAAJ,cAAoBwQ,EAAUpM,SACrCpE,EAAE6Q,SAAS,MACbc,EAAW,GAAAhT,OAAIqB,EAAE4R,QAAQ,IAAK,KAAnB,cAAsC,KACjDD,EAAW,GAAAhT,OAAIqB,EAAE4R,QAAQ,IAAK,KAAnB,kBAA0C,MAE9C5R,EAAE6Q,SAAS,OAClBc,EAAW,GAAAhT,OAAIqB,EAAE4R,QAAQ,IAAK,KAAnB,cAAsC,KACjDD,EAAW,GAAAhT,OAAIqB,EAAE4R,QAAQ,IAAK,KAAnB,kBAA0C,WAMtDD,EI3CmBE,CAAmB1B,IAE3C1R,KAAKK,MAAMgT,YAAYN,oCAGhB,IAAAO,EAAAtT,KAEP,OADAsC,QAAQC,IAAI,UAAWvC,KAAKK,MAAMoL,OAEhCjL,EAAAC,EAAAC,cAAA,OAAKoB,GAAG,qBAAqByR,IAAK,SAACC,GAAUF,EAAK7B,WAAa+B,IAA/D,0BArGwB1S,qBEoFf2S,aAjHb,SAAAA,EAAYvL,GACR,GADmBpE,OAAAC,EAAA,EAAAD,CAAA9D,KAAAyT,GACY,qBAApBvL,EAASwL,SAClB,MAAM,IAAItL,MAAM,uCAElB,GAA2B,qBAAhBF,EAASyL,KAClB,MAAM,IAAIvL,MAAM,yCAElB,IAAKwL,MAAMC,QAAQ3L,EAAS4L,WAC1B,MAAM,IAAI1L,MAAM,+CAGlBpI,KAAK8T,UAAY5L,EAAS4L,UAC1B9T,KAAKyI,OAAS,CAACP,EAASwL,UACxB1T,KAAK+T,UAAY,GACjB/T,KAAKuI,SAAWL,EAASK,UAAY,IACrCvI,KAAKsI,SAAWJ,EAASI,UAAY,IACrCtI,KAAKgU,eAAiB,EACtBhU,KAAKiU,cAAgB,EACrBjU,KAAKkU,KAAOhM,EAASiM,IAAM,EAC3BnU,KAAKoU,OAASlM,EAASyL,KACvB3T,KAAKqU,qBAAuB,EAC5BrU,KAAKsU,iBAAmB,GACxBtU,KAAKuU,iBAAmB,EACxBvU,KAAKwU,UAAYtM,EAASsM,WAAa,EAEnCxU,KAAKwU,WACLlS,QAAQC,IAAR,SAAArC,OAAqBF,KAAKkU,KAA1B,SAAAhU,OAAsCF,KAAKoU,OAA3C,4EAMN,OADmBpU,KAAKyI,OAAOzI,KAAKyI,OAAO1I,OAAS,uCAI1C0U,GACVnS,QAAQC,IAAI,iBAAkBkS,GAC9BzU,KAAK+T,UAAUvS,KAAKiT,GAEhBA,GACAzU,KAAKiU,cAAgB,EACrBjU,KAAKgU,mBAGLhU,KAAKiU,gBACLjU,KAAKgU,eAAiB,GAE1BhU,KAAKyI,OAAOjH,KAAKxB,KAAK0U,aAAaD,2CAGtB7G,KACPA,IAAkC,IAA3B5N,KAAKuU,kBAA6B3G,GAAiC,IAA1B5N,KAAKuU,mBACzDvU,KAAK2U,8DAII/G,GACX,IAAKA,GAAO5N,KAAKiU,eAAiBjU,KAAKkU,KAAM,CAC3ClU,KAAKiU,cAAgB,EACrBjU,KAAK4U,eAAehH,GACpB5N,KAAKuU,iBAAmB,EAExB,IAAMM,EAAS7U,KAAK8U,WAKpB,OAJI9U,KAAKwU,UAAY,IACnBlS,QAAQC,IAAI,qDAAuDsS,EAAS,OAC5EvS,QAAQC,IAAI,kCAEPsS,EAEJ,GAAIjH,GAAO5N,KAAKgU,gBAAkBhU,KAAKoU,OAAQ,CAClDpU,KAAKgU,eAAiB,EACtBhU,KAAK4U,eAAehH,GACpB5N,KAAKuU,kBAAoB,EAEzB,IAAMM,EAAS7U,KAAK8U,WAKpB,OAJI9U,KAAKwU,UAAY,IACnBlS,QAAQC,IAAI,qDAAuDsS,EAAS,OAC5EvS,QAAQC,IAAI,kCAEPsS,EAST,OANM7U,KAAKwU,UAAY,IACnBlS,QAAQC,IAAI,wBAA0BvC,KAAK2N,WAAa,OACxDrL,QAAQC,IAAI,kCAITvC,KAAK2N,8CAIZ,IAAMoH,EAAK/U,KAAK8T,UAAU9T,KAAKqU,sBAGzBW,EAFShV,KAAKyI,OAAOzI,KAAKyI,OAAO1I,OAAS,GAClC0H,KAAKwN,IAAI,GAAIF,EAAG,GAAK/U,KAAKuU,kBAExC,OAAO9M,KAAKK,IAAIL,KAAKI,IAAImN,EAAShV,KAAKuI,UAAWvI,KAAKsI,2DAIvDtI,KAAKsU,iBAAiB9S,KAAKxB,KAAK+T,UAAUhU,QAEtCC,KAAKqU,qBAAuBrU,KAAK8T,UAAU/T,OAAS,GACtDC,KAAKqU,uBAGHrU,KAAKwU,UAAY,GACnBlS,QAAQC,IAAI,6BAA8BvC,KAAK8T,UAAU9T,KAAKqU,wCCiErDa,cA9Jb,SAAAA,EAAY7U,GAAO,IAAAwD,EAAAC,OAAAC,EAAA,EAAAD,CAAA9D,KAAAkV,IACjBrR,EAAAC,OAAAE,EAAA,EAAAF,CAAA9D,KAAA8D,OAAAG,EAAA,EAAAH,CAAAoR,GAAAhR,KAAAlE,KAAMK,KARR9B,MAAQ,CACN4W,OAAQ,GACRnL,WAAY,EACZoL,YAAa,MAIIvR,EAFnBwI,UAAY,KASV,IAAM8I,EAAStR,EAAKwR,kBAPH,OAQjB/S,QAAQC,IAAI,WAAY4S,GACxBtR,EAAKtF,MAAM4W,OAAS,CAACA,EAAO,GAAIA,EAAO,IAEvCtR,EAAKyR,cAAgBzR,EAAKyR,cAAcjR,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAXJA,+EAcH,IAAAyP,EAAAtT,KACd,GAAIA,KAAKzB,MAAMyL,WAAahK,KAAKzB,MAAM4W,OAAOpV,OAAS,EACrDC,KAAKK,MAAMkV,UAAU,CACnBC,eAAgB,sBAAwBxV,KAAKzB,MAAMyL,WAAa,KAElEhK,KAAKC,SAAS,CAAC+J,WAAYhK,KAAKzB,MAAMyL,WAAa,QAEhD,CACH,IAAMC,EAAOjK,KAAKzB,MAAM4W,OAAOzT,IAAI,SAAC+T,EAAGxM,GAAJ,OAAUqK,EAAKoC,aAAaD,EAAGxM,KAClEjJ,KAAKC,SAAS,CAACmV,YAAanL,GAAO,WACjCqJ,EAAKjT,MAAMmR,mBAAmBvH,GAC9BqJ,EAAKjT,MAAME,qDAMJoV,EAAW1M,GAMtB,IAAK,IAAIrH,KALT+T,EAAUC,YAAc3M,EAAI,EAC5B0M,EAAUE,aAAeF,EAAU5L,UAAUpH,YAAcgT,EAAU5L,UAAUpH,YAAYmT,MAAQ,KACnGH,EAAUI,sBAAwBJ,EAAU5L,UAAUpH,YAAcgT,EAAU5L,UAAUpH,YAAYG,SAAW,KAC/G6S,EAAU5L,UAAY4L,EAAU5L,UAAUlI,KAE1B8T,EAAUzC,YACxByC,EAAU/T,GAAO+T,EAAUzC,YAAYtR,GAWzC,MATA,CAAC,kBAAmB,kBAAkB8I,QAAQ,SAAAtJ,GACxCA,KAAQuU,UACHA,EAAUvU,YAIduU,EAAUzC,mBACVyC,EAAUxF,4BACVwF,EAAU3E,sBACV2E,wCAIKA,GACZ,IAAMR,EAAMrR,OAAAkS,EAAA,EAAAlS,CAAO9D,KAAKzB,MAAM4W,QACxBc,EAAgBN,EAAUnP,WAAWmP,EAAUnP,WAAWzG,OAAS,GAAGuS,6BAC5E6C,EAAOnV,KAAKzB,MAAMyL,YAAYkM,aAAeP,EAAU3C,YACvDmC,EAAOnV,KAAKzB,MAAMyL,YAAYmM,eAAiBF,EAC/Cd,EAAOnV,KAAKzB,MAAMyL,YAAYoM,iBAAmBT,EAAUnP,WAC3D2O,EAAOnV,KAAKzB,MAAMyL,YAAYiJ,aAAe0C,EAAU1C,aACvDkC,EAAOnV,KAAKzB,MAAMyL,YAAYkJ,YAAcyC,EAAUzC,YAGlDlT,KAAKzB,MAAMyL,WAAamL,EAAOpV,OAAS,IAC1CoV,EAAOnV,KAAKzB,MAAMyL,WAAa,GAAGqM,kBAAoBrW,KAAKqM,UAAU5D,OAAO2F,OAG9EpO,KAAKC,SAAS,CAACkV,WACfnV,KAAKsW,4DAGavM,EAAWoL,GAC7B,IAEIoB,EAFEC,EAAiBrB,EAAOtV,OAAO,SAAA4V,GAAC,OAAIA,EAAE1L,UAAUlI,OAASkI,EAAUlI,OAAMuM,MAI7EmI,EADEC,EACkB1S,OAAOoM,KAAKsG,EAAerG,sBAAsBiC,SAAS,SAAW,IAAM,IAE3ExK,EAAmB,EAAG,GAAK,IAAM,IAEvD,IAAI6O,EAAY,CAAC9G,GAAI,MACjB+G,EAAa,CAACjG,GAAI,MAItB,MAHA,CAAC,EAAE,GAAG/F,QAAQ,SAAAnJ,GAAMkV,EAAS,MAAAvW,OAAOqW,GAAPrW,OAA2BqB,IAAO,OAC/D,CAAC,EAAE,EAAE,EAAE,GAAGmJ,QAAQ,SAAAnJ,GAAMmV,EAAU,MAAAxW,OAAOqB,IAAO,OAEzC,CACLkV,YACAC,wDAIc,IAAAC,EAAA3W,KAChBsC,QAAQC,IAAI,gBAAiBvC,KAAKK,MAAMsC,aAIxC,IAFA,IAAIiU,EAAaxP,EAAQ,CAAC,OAAQ,eAAgB,UAAW,WACzDyP,EAAgBzP,EAAQ,CAAC,OAAQ,eAAgB,UAAW,WACzDyP,EAAc,KAAOD,EAAWA,EAAW7W,OAAS,IACzD8W,EAAgBzP,EAAQyP,GAE1BD,EAAaA,EAAW1W,OAAO2W,GAE/B,IAAI1B,EAAS,GAwBb,OAvBAyB,EAAWlM,QAAQ,SAAAoM,GACjB,IAAI/M,EAAY,CACdlI,KAAMiV,EACNnU,YAAa,CAAC,UAAW,gBAAgByP,SAAS0E,GAAKH,EAAKtW,MAAMsC,YAAc,MAG5EuQ,EAAcyD,EAAKI,oBAAoBhN,EAAWoL,GACxDA,EAAO3T,KAAK,CACV6U,kBAAmB,KACnBtM,UAAWA,EACXoM,eAAgB,KAChBC,iBAAkB,GAClBF,aAAc,KACd/F,qBAAsB+C,EAAYuD,UAClCzF,sBAAuBkC,EAAYwD,eAGvCvB,EAAO,GAAGkB,kBAAoBrW,KAAKK,MAAMgW,kBAGvClB,EAAO,GAAGxJ,iBAAkB,EAC5BwJ,EAAOA,EAAOpV,OAAS,GAAGmR,gBAAiB,EAEtCiE,mCAMP,OAFA7S,QAAQC,IAAI,WAAYvC,KAAKzB,MAAM4W,QAE/BnV,KAAKzB,MAAM6W,YACL5U,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,WAAME,KAAKC,UAAUb,KAAKzB,MAAM6W,YAAa,KAAM,MAGlEpV,KAAKqM,UAAY,IAAI2K,EAAY,CAC/BtD,SAAU1T,KAAKzB,MAAM4W,OAAOnV,KAAKzB,MAAMyL,YAAYqM,kBACnD1C,KAAM,EACNG,UAAW,CAAC,EAAG,EAAG,GAClBU,UAAW,IAIXhU,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuW,EAAD,CACE5D,YAAarT,KAAKsV,cAClBrK,gBAAiBA,EACjBoB,UAAWrM,KAAKqM,UAChBZ,MAAOzL,KAAKzB,MAAM4W,OAAOnV,KAAKzB,MAAMyL,YACpCD,UAAW/J,KAAKzB,MAAM4W,OAAOnV,KAAKzB,MAAMyL,YAAYD,UACpD1B,UAjKS,EAkKT2B,WAAYhK,KAAKzB,MAAMyL,sBA/JDlJ,aCiIjBoW,qBAjIb,SAAAA,EAAY7W,GAAO,IAAAwD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9D,KAAAkX,IACjBrT,EAAAC,OAAAE,EAAA,EAAAF,CAAA9D,KAAA8D,OAAAG,EAAA,EAAAH,CAAAoT,GAAAhT,KAAAlE,KAAMK,KALR9B,MAAQ,CACN4Y,QAAQ,GAMRtT,EAAKuT,oBAAsBvT,EAAKuT,oBAAoB/S,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAHVA,mFAMjBlF,OAAO0Y,SAAS,EAAG,8CAGFhG,EAAWiG,IACvBjG,EAAUkG,YAAcvX,KAAKK,MAAMkX,YACtCvX,KAAKC,SAAS,CAACuX,YAAY,kDAIT,IACZD,EAAevX,KAAKK,MAApBkX,WACFE,EAAKzL,SAAStL,cAAc,YAClC+W,EAAGhY,MAAQ8X,EACXvL,SAAS0L,KAAKC,YAAYF,GAC1BA,EAAGG,SACH5L,SAAS6L,YAAY,QACrB7L,SAAS0L,KAAKI,YAAYL,GAE1BzX,KAAKC,SAAS,CAACkX,QAAQ,qCAIvB,IAAMY,EAAS,CACbvN,KAAQ,EACRF,QAAW,EACXC,eAAgB,EAChBb,OAAU,GAEZ1J,KAAKK,MAAM0S,SAAW/S,KAAKK,MAAM0S,QAAQrI,QAAQ,SAAAe,GAC/CsM,EAAOtM,EAAM1B,YAAc0B,EAAMyK,eAR5B,IAWCqB,EAAevX,KAAKK,MAApBkX,WACR,OACE/W,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,wCAAqCF,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAAA,uEACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,0HACAF,EAAAC,EAAAC,cAAA,yLACAF,EAAAC,EAAAC,cAAA,+RACAF,EAAAC,EAAAC,cAAA,+HAKNF,EAAAC,EAAAC,cAAA,oCAGAF,EAAAC,EAAAC,cAAA,mkBAIAF,EAAAC,EAAAC,cAAA,4BAGAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,SADF,KACwCoX,EAAM,KAASvL,QAAQ,GAAGhM,EAAAC,EAAAC,cAAA,WAChEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,YAFF,KAE2CoX,EAAM,QAAYvL,QAAQ,GAAGhM,EAAAC,EAAAC,cAAA,WACtEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,iBAHF,KAGgDoX,EAAO,gBAAgBvL,QAAQ,GAAGhM,EAAAC,EAAAC,cAAA,WAChFF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAhB,WAJF,IAIyCoX,EAAM,OAAWvL,QAAQ,GAAGhM,EAAAC,EAAAC,cAAA,YAGrEF,EAAAC,EAAAC,cAAA,2eAEAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,IAAhB,kBAGFH,EAAAC,EAAAC,cAAA,gXAEAF,EAAAC,EAAAC,cAAA,+MACQF,EAAAC,EAAAC,cAAA,KAAGsX,IAAI,sBAAsBC,KAAK,sCAAsCzK,OAAO,UAA/E,+BADR,+FAGQhN,EAAAC,EAAAC,cAAA,KAAGsX,IAAI,sBAAsBC,KAAK,kCAAkCzK,OAAO,UAA3E,2BAHR,kCAKQhN,EAAAC,EAAAC,cAAA,KAAGsX,IAAI,sBAAsBC,KAAK,sCAAsCzK,OAAO,UAA/E,+BALR,sIAQAhN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YACXH,EAAAC,EAAAC,cAAA,gDAGFF,EAAAC,EAAAC,cAAA,sCAGAF,EAAAC,EAAAC,cAAA,6MAEQF,EAAAC,EAAAC,cAAA,KAAGsX,IAAI,sBAAsBC,KAAK,sCAAsCzK,OAAO,UAA/E,+BAFR,0DAKAhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACZ4W,GACC/W,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACV4W,EACD/W,EAAAC,EAAAC,cAAA,QACEC,UAAW,sBAAwBX,KAAKzB,MAAM4Y,OAAS,SAAW,IAClEhU,QAASnD,KAAKoX,qBAEVpX,KAAKzB,MAAM4Y,OAAS,SAAW,UAM3C3W,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,oFAEAH,EAAAC,EAAAC,cAAA,utCAGAF,EAAAC,EAAAC,cAAA,03BA7HiB2B,IAAMvB,8BCQhBoX,UAPC,SAAC7X,GAAD,OACdG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAK4C,IAAK6U,KAAQ3U,IAAI,2BCsbX4U,eA1Yb,SAAAA,EAAY/X,GAAO,IAAAwD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9D,KAAAoY,IACjBvU,EAAAC,OAAAE,EAAA,EAAAF,CAAA9D,KAAA8D,OAAAG,EAAA,EAAAH,CAAAsU,GAAAlU,KAAAlE,KAAMK,KA9BR9B,MAAQ,CACN4F,MAAO,GACPC,UAAW,EACXiU,aAAc,KACdC,eAAgB,KAChBC,eAAgB,KAChBC,iBAAkB,KAClBC,gBAAgB,EAChBC,iBAAiB,EACjBC,WAAW,EACXC,QAAS,KACT9Z,UAAW,KACXN,cAAc,GAiBGqF,EAdnBgV,gBAAkB,CAChB1U,MAAS,CACL,UACA,WACA,WACA,WACA,aACA,aACA,YAEJ2U,iBAAoB,GAIHjV,EAFnBkV,kBAAoB,KAKlBlV,EAAKtF,MAAM4F,MAAQN,EAAKgV,gBAAgB1U,MACxCN,EAAKtF,MAAM6F,UAAYP,EAAKgV,gBAAgBC,iBAE5CjV,EAAKmV,iBAAmBnV,EAAKmV,iBAAiB3U,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKjB,YAAciB,EAAKjB,YAAYyB,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACnBA,EAAKoV,SAAWpV,EAAKoV,SAAS5U,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAChBA,EAAKqV,iBAAmBrV,EAAKqV,iBAAiB7U,KAAtBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACxBA,EAAKsV,cAAgBtV,EAAKsV,cAAc9U,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACrBA,EAAKuV,aAAevV,EAAKuV,aAAa/U,KAAlBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACpBA,EAAK0R,UAAY1R,EAAK0R,UAAUlR,KAAfP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACjBA,EAAKvD,oBAAsBuD,EAAKvD,oBAAoB+D,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAe3BA,EAAKtF,MAAM8a,aAAc,EAWzBxV,EAAKtF,MAAM+a,mBAAoB,EAvCdzV,4EA0CN0V,GACPvZ,KAAKzB,MAAM8a,cAEf/W,QAAQC,IAAI,cAAegX,GAC3BA,EAAEC,iBACFD,EAAEE,YAAc,gDAIhB9a,OAAOyO,iBAAiB,eAAgBpN,KAAKoZ,+CAKtCM,GACP1Z,KAAK2C,YAAc3C,KAAK2Z,eAAeD,yCAInC1Z,KAAKzB,MAAM6F,UAAYpE,KAAKzB,MAAM4F,MAAMpE,OAAS,IAE/BC,KAAKzB,MAAjBqa,UAENtW,QAAQC,IAAI,mBACZvC,KAAKuV,UAAU,CACbC,eAAgBxV,KAAK4Z,iBAIzB5Z,KAAKC,SAAS,CAACmE,UAAWpE,KAAKzB,MAAM6F,UAAY,4CAItCyV,GACb,IAAMlX,EAAcmX,GAAOja,OAAO,SAAAoJ,GAAC,OAAIA,EAAE6M,QAAU+D,EAAI/D,QAAO1H,MAExD2L,EAAOF,EAAI/W,SAASqQ,QAAQ,OAAQ,IACtCrQ,EAAW,EACf,GAAIiX,GAAQpX,EAAYI,oBAAoBC,cAC1CF,EAAW,MAER,IAAIiX,GAAQpX,EAAYI,oBAAoBE,oBAI/C,MAAMmF,MAAK,uCAAAlI,OAAwC6Z,EAAxC,iBAAA7Z,OAA4D2Z,EAAI/D,MAAhE,OAHXhT,GAAY,EAYd,MALc,CACZgT,MAASnT,EAAYmT,MACrBhT,SAAYA,EACZC,oBAAuBJ,EAAYI,iEAKnBjE,GAAW,IAAAwU,EAAAtT,KAEvB2C,EAAc3C,KAAK2Z,eAAe,CACtC7D,MAAOhX,EAAUkb,OACjBlX,SAAUhE,EAAUmb,WAGtBja,KAAKC,SAAS,CACZnB,YACA6D,cACAiW,QAAS9Z,EAAUob,IAHrBpW,OAAAqW,EAAA,EAAArW,CAAAsW,EAAA3Z,EAAAqO,KAIG,SAAAuL,IAAA,IAAA1U,EAAA,OAAAyU,EAAA3Z,EAAA6Z,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAhb,MAAA,cAAAgb,EAAAhb,KAAA,EACsB+T,EAAKmH,aAD3B,UAEK,YADA9U,EADL4U,EAAAG,MAE2BzQ,KAF3B,CAAAsQ,EAAAhb,KAAA,cAGO6I,MAAM,0BAHb,OAKDkL,EAAKrT,SAAS,CAAC0a,QAAShV,EAASsE,KAAK0Q,UACtCrH,EAAKiC,UAALzR,OAAA8W,EAAA,EAAA9W,CAAA,CACE8H,QAAS,sBACN9M,EAFL,CAGE6b,QAAShV,EAASsE,KAAK0Q,WATxB,wBAAAJ,EAAAM,SAAAR,gDAcYhC,GAQfA,EAAayC,OAAS,KACtBzC,EAAa7R,WAAWkE,QAAQ,SAAAoI,KAEzBuF,EAAayC,QAAUhI,EAAEP,WAAa8F,EAAayC,UAAQzC,EAAayC,OAAShI,EAAEP,cAK1FvS,KAAKC,SAAS,CAACoY,iBAKfrY,KAAK4C,uDAGUmQ,GAAS,IAAA4D,EAAA3W,KACxBsC,QAAQC,IAAI,uBAAwBwQ,GACpC/S,KAAKC,SAAS,CAACsY,eAAgBxF,GAAU,WACvC4D,EAAKwC,4KAOFnZ,KAAKzB,MAAMqa,+BACdtW,QAAQC,IAAI,qEAIO,wFACfwY,EAAW,CACfC,SAtMW,MAuMXpC,QAAW5Y,KAAKzB,MAAMqa,2BAGCqC,IAAMC,KANV,wFAM6BH,iBAA1CpV,2BACCA,4CAEDA,EAAWwV,EAAAC,GAAMzV,UAANwV,EAAAC,GACjB9Y,QAAQC,IAAI,cAAeoD,qBACpBA,yLAKK0V,gFACTrb,KAAKzB,MAAMqa,+BACdtW,QAAQC,IAAI,gCAAiC8Y,mCAI1B,2EACfN,EAAW,CACfC,SA5NW,MA6NXK,OAASvX,OAAA8W,EAAA,EAAA9W,CAAA,GAAKuX,EAAd,CAAsBC,gBAAgB,IAAIC,MAAOC,sBACjD5C,QAAW5Y,KAAKzB,MAAMqa,QACtB6C,aAAA,GAAAvb,OA9NW,gBA8NX,4EAGuB+a,IAAMC,KARV,2EAQ6BH,iBAA1CpV,2BACCA,4CAEDA,EAAW+V,EAAAN,GAAMzV,UAAN+V,EAAAN,GACjB9Y,QAAQC,IAAI,cAAeoD,qBACpBA,2LAKMoV,8EACf/a,KAAKC,SAAS,CAACwY,gBAAgB,IAEV,gGAEjBzY,KAAKzB,MAAM+Z,iBAAkBtY,KAAKzB,MAAM+a,0CACrCtZ,KAAKzB,MAAM+a,oBACd2B,IAAMU,SAASC,QAAQC,OAAvB,cAAiD7b,KAAKzB,MAAM+Z,eAAewD,yBAGpDb,IAAMC,KAPZ,+FAO+BH,iBAA1CpV,mBACA3F,KAAKC,SAAS,CAClBwY,gBAAgB,EAChBC,iBAAiB,qCAEZ/S,4CAEDA,EAAWoW,EAAAX,GAAMzV,UAANoW,EAAAX,aACXpb,KAAKC,SAAS,CAClBwY,gBAAgB,EAChBC,gBAAiB/S,qCAEZA,mCAITrD,QAAQC,IAAI,oUAKRmP,EAAY,GAGlB1R,KAAKzB,MAAMga,eAAe7N,QAAQ,SAAAT,GAChCA,EAAKmM,iBAAiB1L,QAAQ,SAAAsR,GAC5BA,EAAMC,YAAcD,EAAMhK,aACnBgK,EAAMhK,MACb,IAAMkK,EAAatb,KAAKsN,MAAMtN,KAAKC,UAAUoJ,WACtCiS,EAAW9F,iBAClB1E,EAAUlQ,KAAVsC,OAAA8W,EAAA,EAAA9W,CAAA,GAAmBkY,EAAUE,QAK3BnB,EAAW,CACfoB,WAAY,CACV3V,WAAc,CACZ3E,KAAQ,SACRua,SAAY,qEACZC,SAAY,gBACZC,SAAY,MACZrS,KAAQyH,IAGZkH,QAAS5Y,KAAKzB,MAAMqa,QACpBoC,SApSW,OAuSb1Y,QAAQC,IAAI,kBAAmBwY,YACR/a,KAAKuc,WAAWxB,UAAjCpV,SACNrD,QAAQC,IAAI,kCAAmCoD,GAE/ChH,OAAO2O,oBAAoB,eAAgBtN,KAAKoZ,sJAIhD,OAAOpZ,KAAKzB,MAAM4F,MAAMnE,KAAKzB,MAAM6F,4CAKnC,GAAIpE,KAAKzB,MAAMka,eACb,OACEjY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAAC8b,GAAD,QAMR,GAAIxc,KAAKzB,MAAMma,gBACb,OACElY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,WAAME,KAAKC,UAAUb,KAAKzB,MAAMma,gBAAiB,KAAM,MAO/D,GAA2B,YAAvB1Y,KAAK4Z,cACP,OACEpZ,EAAAC,EAAAC,cAAC+b,EAAD,CAASnc,oBAAqBN,KAAKM,oBAAqBC,WAAYP,KAAK4C,cAK7E,GAA2B,aAAvB5C,KAAK4Z,cAEP,OACEpZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACgc,EAAD,CAAU/Z,YAAa3C,KAAKzB,MAAMoE,YAAa6B,cAAexE,KAAK4C,eAKzE,GAA2B,aAAvB5C,KAAK4Z,cASP,OANA5Z,KAAK+Y,kBAAoB,IAAI/B,EAAY,CACvCtD,SAAU,IACVC,KAAM,EACNG,UAAW,CAAC,EAAG,EAAG,GAClBU,UAAW,IAGXhU,EAAAC,EAAAC,cAACuW,EAAD,CACE5D,YAAarT,KAAKgZ,iBAClB/N,gBAAiBA,EACjBoB,UAAWrM,KAAK+Y,kBAChBtN,MAAO,CAAC1B,UAAW,CAAClI,KAAM,aAC1BwG,UAAW,IAKjB,GAA2B,aAAvBrI,KAAK4Z,cACP,OACEpZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAACic,EAAD,CAAU/Z,YAAa5C,KAAK4C,eAKlC,GAA2B,eAAvB5C,KAAK4Z,cAAgC,CACvC,IAAIvD,EAAoBrW,KAAKzB,MAAM8Z,aAAerY,KAAKzB,MAAM8Z,aAAayC,OAAS,IACnF,OACEta,EAAAC,EAAAC,cAACkc,EAAD,CACEvG,kBAAmBA,EACnB1T,YAAa3C,KAAKzB,MAAMoE,YACxB6O,mBAAoBxR,KAAKkZ,iBACzB3Y,WAAYP,KAAK4C,YACjB2S,UAAWvV,KAAKuV,YAKtB,MAA2B,eAAvBvV,KAAK4Z,cAELpZ,EAAAC,EAAAC,cAACmc,EAAD,CACE9J,QAAS/S,KAAKzB,MAAMga,eACpBuE,cAAe9c,KAAK8c,cACpBvF,WAAYvX,KAAKzB,MAAMoc,UAO3Bna,EAAAC,EAAAC,cAACqc,EAAD,CAAWva,UAAW,CACpBwa,IAAK,kCACL7Y,MAAOnE,KAAKzB,MAAM4F,MAClBM,QAASzE,KAAKzB,MAAM4F,MAAMnE,KAAKzB,MAAM6F,WACrC4N,MAAOhS,KAAKzB,MAAM6F,iDAMZ6F,GACV,OACEzJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,UAAQyC,QAASnD,KAAK4C,aAAtB,aAGFpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,WAAME,KAAKC,UAAUoJ,EAAM,KAAM,aAhajBnJ,aCLXmc,2LARX,OACEzc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACwc,GAAD,cALUpc,cCOEqc,QACW,cAA7Bxe,OAAOC,SAASwe,UAEe,UAA7Bze,OAAOC,SAASwe,UAEhBze,OAAOC,SAASwe,SAASC,MACvB,2DCZNC,IAASC,OAAO/c,EAAAC,EAAAC,cAAC8c,GAAD,MAASxR,SAASC,eAAe,SD2H3C,kBAAmBwR,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.aeaa4c02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instruction2-image1.1e2c16fe.png\";","module.exports = __webpack_public_path__ + \"static/media/instruction3-image1.40f25c73.png\";","module.exports = __webpack_public_path__ + \"static/media/ajax-loader.84a1d5b1.gif\";","import React, { Component } from 'react';\n\nexport default class Landing extends Component {\n\n  state = {\n    loadingError: false\n  }\n\n  componentDidMount() {\n    const requiredParams = ['Social', 'Position', 'ID']\n\n    const searchParams = new URLSearchParams(window.location.search);\n    const urlParams = {};\n\n    for (let p of searchParams) {\n      urlParams[p[0]] = p[1];\n    }\n    \n    const missingParams = requiredParams.filter(param => !(param in urlParams));\n\n    if (missingParams.length) {\n      this.setState({loadingError: `Invalid link - missing  url parameters: ${missingParams.join(\", \")}`})\n    }\n    else {\n      const { submitUrlParameters, finishStep } = this.props;\n      submitUrlParameters(urlParams);\n      finishStep();\n    }\n  }\n\n  render() {\n      if (this.state.loadingError) {\n        return (\n          <div className=\"container submittingData\">\n            <div className=\"vertical-center\">\n              <p>Loading Error:</p>\n              <pre className=\"data-output\">{JSON.stringify(this.state.loadingError, null, 2)}</pre>\n            </div>            \n          </div>\n        )\n      }\n\n      return (\n          <div className=\"container\">\n            <div className=\"vertical-center\">\n              <p>Link parameters:</p>\n              <pre className=\"data-output\">{JSON.stringify(this.state, null, 2)}</pre>\n            </div>            \n          </div>\n      )\n\n  }\n}\n","import React from 'react';\nimport './radioRange.css';\n\n\nconst RadioRange = (props) => {\n  const {\n    rangeMin,\n    currentValue,\n    rangeMax,\n    handleRadioChange,\n    name,\n    reversed\n  } = props;\n\n  let options = [];\n  if (reversed) {\n    for (let n=rangeMax; n >= rangeMin; n--) {\n      options.push(n.toString());\n    }\n  }\n  else {\n    for (let n=rangeMin; n <= rangeMax; n++) {\n      options.push(n.toString());\n    }\n  }\n\n  return (\n    <div className=\"radioRange\">\n      <ul>\n          {\n            options.map(o => (\n                <li key={o} className=\"form-check\">\n                  <input className=\"form-check-input\"\n                      type=\"radio\"\n                      name={name}\n                      id={`${name}-${o}`}\n                      value={o}\n                      checked={currentValue===o}\n                      onChange={handleRadioChange}\n                      />\n                  <label htmlFor={`${name}-${o}`} className=\"form-check-label\">\n                    {o}\n                  </label>\n                </li>\n            ))\n          }\n      </ul>\n    </div>\n  );\n}\n\nexport default RadioRange;","import React from 'react'\nimport RadioRange from '../WBManager/components/RadioRange/RadioRange';\nimport './QualityCheckSurvey.css';\n\nconst Legend = () => (\n  <div className=\"form-legend\">\n    <div>Strongly Agree</div>\n    <div>Strongly Disagree</div>\n  </div>\n);\n\nconst EngagementLegend = () => (\n  <div className=\"form-legend\">\n    <div>Not at all</div>\n    <div>Very much</div>\n  </div>\n);\n\nclass QualityCheckSurvey extends React.Component {\n  state = {\n    qcheck_1: null,\n    qcheck_2: '',\n    qcheck_3a: '',\n    qcheck_3b: '',\n    qcheck_4: '',\n    qcheck_email: '',\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.canSubmit = this.canSubmit.bind(this);\n  }\n\n  canSubmit() {\n    const canSubmit = this.state.qcheck_1 !== null && this.state.qcheck_3a !== '' && this.state.qcheck_3b !== '';\n    return canSubmit;\n  }\n\n  handleFieldChange(e) {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.props.onQCheckSurveyFinish({...this.state});\n  }\n\n  render() {\n    return (\n      <div className=\"QualityCheckSurvey\">\n        <h2 className=\"centered\">Quality Check Survey</h2>\n        <div className=\"inner-wrapper\">\n            <p>Please answer the following questions regarding your experience completing the HEID task (i.e., the last task you just completed to win money for Self, Charity, Anti-Charity, and Points).</p>\n            <br />\n            <form \n                  onSubmit={this.handleFormSubmit}\n                >\n\n              <div className=\"qcheck_1\">\n                <p>1) The instructions provided in this study were clear, and I understood what I was being asked to do?</p>\n                <div>\n                  <Legend />\n                  <RadioRange\n                    handleRadioChange={this.handleFieldChange}\n                    currentValue={this.state.qcheck_1}\n                    name={'qcheck_1'}\n                    rangeMin={1}\n                    rangeMax={5}\n                  />\n                </div>\n              </div>\n\n              <div className=\"qcheck_2\">\n                <p>2) In one sentence or two, what were you asked to do in the HEID task (Stage 2 Task – HEID Task)?</p>\n                <p>\n                  <textarea \n                    className=\"\"\n                    name=\"qcheck_2\"\n                    value={this.state.qcheck_2} \n                    onChange={this.handleFieldChange} \n                    maxLength={500} />\n                </p>\n              </div>\n\n              <div className=\"qcheck_3\">\n                <p>3) Rate how intense the following emotions were - in general - when completing the task:</p>\n\n                <h4 className=\"qcheck_header\">I Felt Bored</h4>\n                <div className=\"qcheck_3a\">\n                  <div>\n                    <EngagementLegend />\n                    <RadioRange\n                      handleRadioChange={this.handleFieldChange}\n                      currentValue={this.state.qcheck_3a}\n                      name={'qcheck_3a'}\n                      rangeMin={0}\n                      rangeMax={9}\n                    />\n                  </div>\n\n                </div>\n                 \n                 \n                <h4 className=\"qcheck_header\">I Felt Engaged</h4>\n                    <div className=\"qcheck_3b\">\n                      <EngagementLegend />\n                      <RadioRange\n                        handleRadioChange={this.handleFieldChange}\n                        currentValue={this.state.qcheck_3b}\n                        name={'qcheck_3b'}\n                        rangeMin={0}\n                        rangeMax={9}\n                      />\n                    </div>\n                \n\n              </div>\n\n              <div className=\"qcheck_4\">\n                <p>4) Please write any feedback you have about the task and/or your performance. It can be anything (e.g., anything that was hard to see or understand? Did you stop paying attention?). We are curious to hear about your experience and your feedback will help improve future versions of the task. We would rather know if something went wrong so we can include it in the data.</p>\n                <p>\n                  <textarea \n                    className=\"\"\n                    name=\"qcheck_4\"\n                    value={this.state.qcheck_4} \n                    onChange={this.handleFieldChange} \n                    maxLength={500} />\n                </p>\n              </div>\n\n              <hr />\n\n              <div className=\"qcheck_email\">\n                <p>Thank You.</p>\n                <p>Enter your email if you wish for updates on the study:</p>\n                <p>\n                  <input\n                    className=\"\"\n                    name=\"qcheck_email\"\n                    value={this.state.qcheck_email} \n                    onChange={this.handleFieldChange}\n                    placeholder={'Your Email (Optional)'}\n                    />\n                </p>\n              </div>\n\n              <p style={{textAlign: 'right'}}>\n                <button\n                  className=\"btn btn-primary\"\n                  disabled={!this.canSubmit()}\n                >Finish</button>\n              </p>\n            </form>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default QualityCheckSurvey\n","import React, { Component } from 'react';\n\nclass ErrorPage extends Component {\n\n  render() {\n    console.log(this.props.debugInfo);\n\n    return (\n      <div className=\"container errorPage\">\n        <div className=\"vertical-center\">\n          <h3>Oops. An error occurred :(</h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ErrorPage;","import React from 'react';\nimport intro2Image1Src from './instruction2-image1.png';\nimport intro3Image1Src from './instruction3-image1.png';\n\nexport const Intro1 = ({socialIssue, advanceStep}) => {\n  const charityStatement = socialIssue.position > 0 ? socialIssue.position_statements.for_statement : socialIssue.position_statements.alternate_statement;\n  const anticharityStatement = socialIssue.position > 0 ? socialIssue.position_statements.alternate_statement : socialIssue.position_statements.for_statement;\n  \n  return (\n    <div>\n      <h2 className=\"centered\">\n        Welcome to Stage 2 of the Study:<br />\n        The HEID Task!\n      </h2>\n      <p><span className=\"bold\">Estimated time:</span> 40 minutes, broken into 8 game rounds lasting 3-5 minutes each.</p>\n      <p><span className=\"bold\">In the next task, you will be playing a game to maximize:</span></p>\n      <ol>\n        <li><span className=\"bold\">Winning Money for Self (2 Game Rounds):</span> Win up to 15 $ for yourself to spend on fun, relaxing activities, or anything you like.</li>\n        <li><span className=\"bold\">Increasing Donations to your Charity (2 Game Rounds):</span> Increase, by up to $15, how much money will be donated to a charity that fights FOR {charityStatement}.</li>\n        <li><span className=\"bold\">Decreasing Donations to your Anti-Charity  (2 Game Rounds):</span> Decrease, by up to $15, how much money will be donated to your anti-charity, a charity that fights AGAINST {charityStatement} and is FOR {anticharityStatement}.</li>\n        <li><span className=\"bold\">Winning Points (2 Game Rounds):</span> These rounds are not worth any money. They are an opportunity to practice and win for the sake of winning.</li>\n      </ol>\n      <p><span className=\"bold\">The next page will provide specific instructions on what a game round looks like and what you need to do to win.</span></p>\n      <p><span className=\"bold\">At the end of this task, you will view how much money in total you won for yourself and your charity, as well as how much donation money you removed from your anti-charity. You will receive your compensation (money for yourself) immediately following your participation.  Charity donations will be provided at the end of this study (Date: July 01, 2019).</span></p>\n      <div className=\"navButtons\">\n        <button className=\"nextButton\" onClick={() => advanceStep()}>Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport const Intro2 = ({advanceStep}) => {\n  return (\n    <div>\n      <h4>\n        <span className=\"bold underline\">Overview of Each Game Round:</span>\n      </h4>\n      <div className=\"intro2image1\"><img src={intro2Image1Src} alt=\"Task Instructions 1\" /></div>\n      <p></p>\n      <ol>\n        <li><span className=\"bold\">Instructions:</span> At the start of each game-round (8 total), you will be instructed on what social issue you are fighting for and reminded of previous instructions.</li>\n        <li><span className=\"bold\">Questions:</span> You will be asked to answer a few questions about how you are feeling in the moment.</li>\n        <li><span className=\"bold\">Trials:</span> You will complete a number of trials where <span className=\"bold\">your goal is to hit a target (grey circle appearing on your screen) as quickly as possible in each trial</span>. If you hit the target, you will win the value of that trial. If you miss the target, you will not win the value of that trial. Each trial is worth a different amount of money or points. More detailed instructions are provided in the next page.</li>\n        <li><span className=\"bold\">Questions:</span> At the end of each game-round, you will be asked some additional questions about how you are feeling.</li>\n      </ol>\n      <div className=\"navButtons\">\n        <button className=\"prevButton\" onClick={() => advanceStep(true)}>Previous</button>\n        <button className=\"nextButton\" onClick={() => advanceStep()}>Next</button>\n      </div>\n    </div>\n  );\n}\n\nexport const Intro3 = ({advanceStep}) => {\n\n  return (\n    <div>\n      <h4>\n        <span className=\"bold underline\">Overview of Each Trial:</span>\n      </h4>\n      <div className=\"intro3image1\"><img src={intro3Image1Src} alt=\"Task Instructions 2\" /></div>\n      <p></p>\n      <ol>\n        <li><span className=\"bold\">Value of Trial:</span> At the start of each trial, you will first view a protest banner indicating <span className=\"bold\">what you are fighting for</span> (e.g., For Self, For Charity, Against Anti-Charity, For Points) and <span className=\"bold\">how much money (or points)</span> that trial is worth.</li>\n        <li><span className=\"bold\">Fixation Cross:</span> This is followed by a fixation cross (+) displayed at the center of the screen.</li>\n        <li>\n          <p><span className=\"bold\">Hit the Target:</span> This fixation cross will then quickly, and randomly change into the <span className=\"bold\">Grey Circle Target.</span></p>\n          <p><span className=\"bold\">TO WIN, you need to hit your SPACEBAR when this target <span className=\"underline\">appears</span> and before it <span className=\"underline\">disappears</span>.</span> The grey circle target will remain on the screen for less than 250 milliseconds on average, so you will need to respond as quickly as you can.</p>\n          <div><span className=\"bold\">YOU WILL LOSE that trial if you press the SPACEBAR:</span></div>\n          <ul>\n            <li>Before the target appears.</li>\n            <li>After the target disappears.</li>\n            <li>More than once (repeatedly hitting the spacebar).</li>\n          </ul>\n        </li>\n        <li><span className=\"bold\">Feedback:</span> Following, you will be informed of whether you won or lost that trial and how much money (or points) you won (✔) or did not win (✘) respectively.</li>\n        <li><span className=\"bold\">Break:</span> There will be a short break before you start the next trial.</li>\n      </ol>\n      <div className=\"navButtons\">\n        <button className=\"prevButton\" onClick={() => advanceStep(true)}>Previous</button>\n        <button className=\"nextButton\" onClick={() => advanceStep()}>Next</button>\n      </div>\n    </div>\n  );\n}\n\n","import React, { Component } from 'react';\nimport { Intro1, Intro2, Intro3 } from './BVTIntroCopy';\nimport './BVTIntro.css';\n\n\nclass BVTIntro extends Component {\n  state = {\n    steps: [\n      'intro1',\n      'intro2',\n      'intro3'\n    ],\n    stepIndex: 0\n  }\n\n  constructor(props) {\n    super(props);\n    this.advanceStep = this.advanceStep.bind(this);\n  }\n\n  showing() {\n    return this.state.steps[this.state.stepIndex];\n  }\n\n  advanceStep(reversed=false) {\n    if (reversed) {\n      if (this.state.stepIndex > 0) {\n        this.setState({stepIndex: this.state.stepIndex - 1});\n      }\n      return;\n    }\n\n    if (this.state.stepIndex < this.state.steps.length - 1) {\n      this.setState({stepIndex: this.state.stepIndex + 1});\n    }\n    else {\n      this.props.completeIntro();\n    }\n  }\n\n  render() {\n    if (this.showing() === 'intro1') {\n      return (\n        <Intro1 socialIssue={this.props.socialIssue} advanceStep={this.advanceStep} />\n      );\n    }\n\n    if (this.showing() === 'intro2') {\n      return (\n        <Intro2 socialIssue={this.props.socialIssue} advanceStep={this.advanceStep}  />\n      );\n    }\n\n    if (this.showing() === 'intro3') {\n      return (\n        <Intro3 socialIssue={this.props.socialIssue} advanceStep={this.advanceStep}  />\n      );\n    }\n    \n  }\n}\n\nexport default BVTIntro;","import React, { Component } from 'react';\n\n\nclass ExpIntro extends Component {\n  render() {\n    return (\n      <div>\n        <h2 className=\"centered\">Thank you for completing the practice round.</h2>\n        <p>You are now ready to play this game.</p>\n        <div>Remember that you will play 8 game rounds, with each round counting towards either:</div>\n        <ol>\n          <li>Winning money FOR SELF</li>\n          <li>Winning money FOR CHARITY</li>\n          <li>Winning AGAINST ANTI-CHARITY</li>\n          <li>Winning FOR POINTS</li>\n        </ol>\n        <p>Remember, you will complete 8 blocks in total, 2 for each condition (self, charity, anti-charity, points), which will take approximately ~30 minutes of your time. Please try your best to stay motivated despite the duration of this task. You will be informed at each introduction page how many blocks you have left (out of 8).</p>\n        <p>Click Next when you are ready to begin.</p>\n        <div className=\"navButtons\">\n          <button className=\"nextButton\" onClick={this.props.advanceStep}>Next</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExpIntro;","import './ms-selection-response.css';\nconst jsPsych = window.jsPsych;\n\n\njsPsych.plugins['ms-selection-response'] = (function(){\n  var plugin = {};\n\n  plugin.info = {\n    name: 'ms-selection-response',\n    description: '',\n    parameters: {\n      prompt: {\n        type: jsPsych.plugins.parameterType.STRING,\n        pretty_name: 'Prompt',\n        default: null,\n        description: 'Question text.'\n      }\n    }\n  }\n\n  plugin.trial = function(display_element, trial) {\n    var response = {\n      rt: null,\n      selection: null,\n    };\n    var new_html = '<div id=\"ms-selection-response-stimulus\">' + trial.prompt + '</div>';\n    new_html += '<div id=\"ms-selection-response-prompt\">';\n    new_html += `\n    <div class=\"numbered-scale\">\n      <div class=\"grid-line\"></div>\n      <div class=\"items\">\n        <div>\n          <span>${trial.labels[0]}</span>\n          <span id=\"response_1\" class=\"numbered-scale-tick\" >|</span>\n        </div>\n        <div>\n          <span>${trial.labels[1]}</span>\n          <span id=\"response_2\" class=\"numbered-scale-tick\" >|</span>\n        </div>\n        <div>\n          <span>${trial.labels[2]}</span>\n          <span id=\"response_3\" class=\"numbered-scale-tick\">|</span>\n        </div>\n        <div>\n          <span>${trial.labels[3]}</span>\n          <span id=\"response_4\" class=\"numbered-scale-tick\" >|</span>\n        </div>\n        <div>\n          <span>${trial.labels[4]}</span>\n          <span id=\"response_5\" class=\"numbered-scale-tick\" >|</span>\n        </div>\n      </div>\n    </div>\n  `;\n    new_html += '<p>Press left or right arrows to move cursor and \"Enter\" to submit.</p></div>';\n\n    // draw\n    display_element.innerHTML = new_html;\n\n    var drawSelection = function() {\n      if (display_element.querySelector('.numbered-scale-tick.selected')) {\n        display_element.querySelector('.numbered-scale-tick.selected').className = 'numbered-scale-tick';\n      }\n      display_element.querySelector(`.numbered-scale #response_${response.selection}`).className = 'numbered-scale-tick selected';\n    }\n    var increaseSelection = function() {\n      if (!response.selection || response.selection === 5) {\n        response.selection = 1;\n      }\n      else {\n        response.selection++;\n      }\n      drawSelection();\n    }\n    var decreaseSelection = function() {\n      if (!response.selection || response.selection === 1) {\n        response.selection = 5;\n      }\n      else {\n        response.selection--;\n      }\n      drawSelection();\n    }\n\n    var end_trial = function() {\n      // kill keyboard listeners\n      if (typeof keyboardListener !== 'undefined') {\n        jsPsych.pluginAPI.cancelKeyboardResponse(keyboardListener);\n      }\n      // clear the display\n      display_element.innerHTML = '';\n\n      var trial_data = {\n        \"rt\": response.rt,\n        \"selection\": response.selection\n      };\n\n      jsPsych.finishTrial(trial_data);\n    }\n\n    var after_response = function(info) {\n      if (info.key === 37) {\n        decreaseSelection();\n      }\n      else if (info.key === 39) {\n        increaseSelection();\n      }\n      else if (info.key === 13 && response.selection) {\n        end_trial();\n      }\n    }\n    var keyboardListener = jsPsych.pluginAPI.getKeyboardResponse({\n      callback_function: after_response,\n      valid_responses: ['Enter', 'leftarrow', 'rightarrow'],\n      rt_method: 'date',\n      persist: true,\n      allow_held_key: false\n    });\n\n  }\n\n  return plugin;\n})();","class KeyLogger {\n  keyLog = []\n  logger = (event) => {\n    // only check for spacebar\n    if (event.keyCode === 32) {\n      this.keyLog.push(event.keyCode);\n    }\n  }\n}\n\nconst shuffle = function(arr) {\n  var currentIndex = arr.length;\n  var randIndex, tempValue;\n\n  while (currentIndex !== 0) {\n    randIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex--;\n\n    tempValue = arr[currentIndex];\n    arr[currentIndex] = arr[randIndex];\n    arr[randIndex] = tempValue;\n  }\n  return arr;\n}\n\nconst getMeanForLast = (arr, n) => {\n  if (arr.length < n) {\n    n = arr.length;\n  }\n  var data = arr.slice(-n);\n  var sum = 0;\n  for (var i = 0; i < data.length; i++) {\n    sum += data[i];\n  }\n  return Math.round(sum / n);\n}\n\nconst randomFromInterval = (min, max, step=1) => {\n  const range = (max - min) / step\n  return min + Math.floor(Math.random() * range) * step\n}\n\nfunction logTrialTimings(currentTrial) {\n  currentTrial.total_duration = currentTrial.jspsych_timestamps.blank2_end_time_elapsed - currentTrial.absolute_trial_start;\n  for (let key in currentTrial.jspsych_timestamps) {\n    currentTrial[key] = currentTrial.jspsych_timestamps[key];\n  }\n  delete currentTrial.jspsych_timestamps;\n  return currentTrial;\n}\n\nfunction logTrialResponses(currentTrial) {\n  for (let key in currentTrial.response_logs) {\n    currentTrial[`${key}_num_responses`] = currentTrial.response_logs[key];\n  }\n  delete currentTrial.response_logs;\n  return currentTrial;\n}\n\nconst collectTrials = (trialData) => {\n  const trials = []\n  let currentTrial = null\n  let trialIndex = 1\n  let cumulativePointsOnOffer = 0;\n  let cumulativePointsGained = 0;\n  trialData.forEach( (trialPart) => {\n      delete trialPart.stimulus\n\n      if (trialPart.beginTrial) {\n          currentTrial = {\n            index: trialIndex++,\n            jspsych_timestamps: {},\n            response_logs: {\n              fixation: 0,\n              target: 0,\n              blank1: 0\n            },\n            absolute_trial_start: trialPart.absolute_trial_start\n          }\n      }\n\n      [\n        'cue',\n        'fixation',\n        'target',\n        'blank1',\n        'feedback',\n        'blank2'\n      ].forEach((n) => {\n        if (trialPart[n]) {\n          currentTrial.jspsych_timestamps[`${n}_start_time_elapsed`] = trialPart.start_time_elapsed;\n          currentTrial.jspsych_timestamps[`${n}_end_time_elapsed`] = trialPart.time_elapsed;\n\n          if (Object.keys(trialPart).includes('keylog')) {\n            currentTrial.response_logs[n] += trialPart.keylog.length;\n          }\n        }\n      });\n\n      \n      if (trialPart.target) {\n        currentTrial.hit = trialPart.hit;\n        currentTrial.response_logs.target += currentTrial.hit ? 1 : 0;\n        currentTrial.target_presentation_rt = trialPart.rt;\n        currentTrial.target_presentation_duration = trialPart.presentation_duration;\n      }\n\n      if (trialPart.blank1) {\n        currentTrial.overall_rt = currentTrial.target_presentation_rt;\n        if (!currentTrial.overall_rt && trialPart.rt) {\n          currentTrial.overall_rt = currentTrial.target_presentation_duration + trialPart.rt;\n        }\n      }\n\n      if (trialPart.point_value) {\n        currentTrial.point_value = trialPart.point_value;\n        cumulativePointsOnOffer += trialPart.point_value;\n        currentTrial.cumulativePointsOnOffer = cumulativePointsOnOffer;\n      }\n\n      if (trialPart.feedback) {\n        currentTrial.autolose = trialPart.autolose;\n      }\n\n      if (trialPart.endTrial) {\n        if (currentTrial.hit && !currentTrial.autolose) {\n          cumulativePointsGained += currentTrial.point_value;\n        }\n        currentTrial.cumulativePointsGained = cumulativePointsGained;\n        logTrialTimings(currentTrial);\n        logTrialResponses(currentTrial);\n        trials.push(currentTrial);\n    }\n  })\n\n  return trials\n}\n\nfunction collectAssessments(trialData) {\n  const assessments = {};\n  trialData.forEach( (trialPart) => {\n    [\n      \"q1\",\n      \"q2_a1\",\n      \"q2_a2\",\n      \"q2_b1\",\n      \"q2_b2\",\n      \"q3\",\n      \"q4_1\",\n      \"q4_2\",\n      \"q4_3\",\n      \"q4_4\",\n    ].forEach((n) => {\n      if (trialPart[n]) {\n        assessments[`${n}_time_elapsed`] = trialPart.time_elapsed;\n        assessments[`${n}_response`] = trialPart.response;\n        if (n.includes('a')) {\n          assessments[`${n.replace('a', 'b')}_response`] = null;\n          assessments[`${n.replace('a', 'b')}_time_elapsed`] = null;\n        }\n        else if (n.includes('b')) {\n          assessments[`${n.replace('b', 'a')}_response`] = null;\n          assessments[`${n.replace('b', 'a')}_time_elapsed`] = null;\n        }\n      }\n    })\n\n  });\n  return assessments;\n}\n\nfunction collectDebrief(expData) {\n  console.log('collectDebrief: ', expData);\n  // blocks[this.state.blockIndex].final_points = blockData.total_score;\n  //   blocks[this.state.blockIndex].final_duration = finalDuration;\n\n\n  const results = {\n    num_blocks: expData.length,\n    block_data: expData.map(block => {\n      return {\n        block_index: block.block_index,\n        condition: block.condition,\n        final_points: block.final_points.toFixed(2),\n        success_rate: block.success_rate\n      }\n    })\n  }\n  return results;\n}\n\n\nexport {\n  KeyLogger,\n  randomFromInterval,\n  shuffle,\n  collectTrials,\n  collectAssessments,\n  getMeanForLast,\n  collectDebrief\n}\n","import { shuffle, randomFromInterval } from './experimentUtils';\nimport { range } from 'lodash';\n\nclass PointsDistribution {\n  constructor(settings={}) {\n    if (typeof settings.total !== \"number\") {\n      throw new Error(\"No total specified for PointsTracker\");\n    }\n    if (typeof settings.numTrials !== \"number\") {\n      throw new Error(\"No numTrials specified for PointsTracker\");\n    }\n    if (typeof settings.minValue !== \"number\") {\n      throw new Error(\"No minValue specified for PointsTracker\");\n    }\n    if (typeof settings.maxValue !== \"number\") {\n      throw new Error(\"No maxValue specified for PointsTracker\");\n    }\n\n    this.settings = settings;\n    this.mean = settings.total / settings.numTrials;\n    this.values = [];\n    this.initValues();\n    this.currentTotal = 0;\n    this.currentIndex = 0;\n  }\n\n  getCurrentValue() {\n    return this.values[this.currentIndex];\n  }\n\n  incrementIndex() {\n    this.currentIndex += 1;\n  }\n\n  addValue(val) {\n    this.currentTotal += val;\n  }\n\n\n  initValues() {\n    const { numTrials, minValue, maxValue } = this.settings;\n    const mean = Math.round(\n      100 * (maxValue + minValue) / 2\n    )/100;\n    \n    if (mean !== this.mean) {\n      console.log('mean1: ', mean);\n      console.log('mean2: ', this.mean);\n      throw new Error(\"minValue and maxValue settings are inconsistent with total and numTrials settings for PointsTracker\");\n    }\n    const values = [mean];\n\n    const deltas = range(0.05, mean, 0.05);\n    const numPairs = (numTrials - 1)/2;\n\n    for (let i=0; i<numPairs; i++) {\n      let delta = deltas[randomFromInterval(0, deltas.length)];\n      delta = Math.round(delta * 100)/100;\n\n      const newLower = Math.round((mean - delta) * 100)/100;\n      const newUpper = Math.round((mean + delta) * 100)/100;\n      values.push(newLower);\n      values.push(newUpper);\n    }\n    this.values = shuffle(values);\n  }\n}\n\nexport default PointsDistribution;\n","import { KeyLogger } from './experimentUtils';\n\nconst jsPsych = window.jsPsych;\nconst checkMark = `✔`;\nconst xMark = `✘`;\n\nfunction instructionsCopy({type, socialIssue}) {\n  let charityStatement = '';\n  let anticharityStatement = '';\n  if (socialIssue) {\n    charityStatement = socialIssue.position > 0 ? socialIssue.position_statements.for_statement : socialIssue.position_statements.alternate_statement;\n    anticharityStatement = socialIssue.position > 0 ? socialIssue.position_statements.alternate_statement : socialIssue.position_statements.for_statement;\n  }\n  \n  const copy = {\n    \"practice\": [\n      `<span class=\"bold\">Now you will get the chance to <span class=\"italic\">just</span> practice the task.</span>`,\n      `Press SPACEBAR when you see the grey circle target as quickly as possible before it disappears.`,\n      `<span class=\"bold underline\">Remember:</span> Hit the SPACEBAR ONLY <span class=\"bold underline\">after the target appears</span> and <span class=\"bold underline\">before it disappears</span>. You will also lose the trial if you press the SPACEBAR <span class=\"bold underline\">more than ONCE</span> and <span class=\"bold underline\">before the target appears</span>.`\n    ],\n    \"points\": [\n      `In this round, your goal is to <span class=\"bold\">win points</span>.`,\n      `There is no money at stake in this round. It can be fun just to win points.`,\n      `Each time you respond quickly enough, you <span class=\"bold\">add the value of that trial (e.g., WIN! $ 0.5 ${checkMark}) to your total point score (e.g., WIN! pts 0.5 ${checkMark})</span>.`,\n      `If you are too slow, nothing is added to your total point score <span class=\"bold\">(e.g., LOSE! pts 0.5 ${xMark})</span>`,\n      `The more you win, the more points you win for yourself!`\n      ],\n    \"charity\": [\n      `In this round, your goal is to <span class=\"bold\">win FOR ${charityStatement}</span> and increase donations to this issue.`,\n      `Each time you respond quickly enough, <span class=\"bold\">you add the value of that trial (e.g., WIN! $ 0.5 ${checkMark}) to the donation fund of your charity</span> - a charity that fights FOR ${charityStatement}.`,\n      `If you are too slow, nothing is added to the donation fund of your charity (e.g., LOSE! $ 0.5 ${xMark}).`,\n      `<span class=\"bold\">The more you win, the more money you win for your charity!</span>`\n      ],\n    \"anti-charity\": [\n      `In this round, your goal is to <span class=\"bold\">win AGAINST ${anticharityStatement}</span> and decrease donations to this issue.`,\n      `Each time you respond quickly enough, <span class=\"bold\">you remove the value of that trial (e.g., WIN! $ 0.5 ${checkMark}) from the donation fund of your anti-charity</span> - a charity that fights FOR ${anticharityStatement}.`,\n      `If you are too slow, nothing is removed from the donation fund of your anti-charity (e.g., LOSE! $ 0.5 ${xMark}).`,\n      `<span class=\"bold\">The more you win, the more money you remove from your anti-charity!</span>`,\n      `Each time you respond quickly enough, you remove the value of that trial (e.g., WIN! $ 0.5 ✔) from the donation fund of your anti-charity - a charity that fights <b>FOR ${anticharityStatement}</b> and <b>AGAINST ${charityStatement}</b>.`\n      ],\n    \"self\": [\n      `In this round, your goal is to <span class=\"bold\">win</span> money for <span class=\"bold\">yourself</span></b>.`,\n      `Each time you respond quickly enough, <span class=\"bold\">you add the value of that trial (e.g., WIN! $ 0.5 ${checkMark}) to your total earnings</span>.`,\n      `If you are too slow, nothing is added to your total earnings (e.g., LOSE! $ 0.5 ${xMark}).`,\n      `<span class=\"bold\">The more you win, the more money you win for yourself!</span>`\n    ]\n  };\n\n  return copy[type];\n}\n\nfunction getProtestorSign(signPos, type, dollar, points) {\n  let out = `<div class=\"protestor icon\"><div class=\"protest-sign\">`;\n  if (points) {\n    const signPoints = dollar ? `$ ${points}` : `${points}`;\n    out += `<div class=\"protest-sign-points\">${signPoints}</div>`\n  }\n  out += `<div><span class=\"protest-sign-position\">${signPos}</span> ${type.toUpperCase()}</div>`;\n  out += `</div></div>`;\n  return out;\n}\n\nfunction getTrialInstructions(condition, blockIndex) {\n  return {\n    type: \"html-keyboard-response\",\n    data: { instructions: true },\n    stimulus: () => {\n      let copy = ``;\n      instructionsCopy(condition).forEach(para => {\n        copy += `<p>${para}</p>`;\n      });\n      const signPos = condition.type === 'anti-charity' ? `AGAINST` : `FOR`;\n      const blockIndexFeedback = condition.type === 'practice' ? `` : `<div class=\"blockIndex\"><small>${blockIndex + 1} / 8</small></div>`;\n      return (\n        `<div class=\"intructions-response\">` +\n          `<div class=\"instructions ${condition.type}\">` +\n            getProtestorSign(signPos, condition.type) + \n            blockIndexFeedback +\n            `<div class=\"copy\">${copy}</div>` +\n          `</div>` +\n          `<div><p>Press any key to begin...</p></div>` +\n        `</div>`\n      );\n    }\n  }\n}\n\nfunction getCue(pointsTracker, trialTimes, condition) {\n  const cue = {\n    type: \"html-keyboard-response\",\n    stimulus: () => {\n      const signPos = condition.type === 'anti-charity' ? `AGAINST` : `FOR`;\n      const pointVal = pointsTracker.getCurrentValue().toFixed(2);\n      return (\n        `<div class=\"cue\">` +\n          getProtestorSign(signPos, condition.type, (condition.type !== 'points'), pointVal) +\n        `</div>`\n      );\n    },\n    data: { cue: true },\n    on_start: ({data}) => {\n      data.start_time_elapsed = jsPsych.totalTime();\n      data.absolute_trial_start = jsPsych.totalTime();\n    },\n    trial_duration: () => trialTimes.getCurrentTrial('cue'),\n    response_ends_trial: false,\n    on_finish: (data) => {\n      data.point_value = pointsTracker.getCurrentValue();\n      data.presentation_duration = trialTimes.getCurrentTrial('cue');\n    }\n  };\n  return cue;\n}\n\nfunction getFixation(trialTimes) {\n  let keyLogger = null;\n  const   fixation = {\n    type: \"html-keyboard-response\",\n    stimulus: '<div style=\"font-size: 60px;\">+</div>',\n    response_ends_trial: false,\n    data: {fixation: true},\n    on_start: ({data}) => {\n      keyLogger = new KeyLogger();\n      document.addEventListener(\"keyup\", keyLogger.logger);\n\n      // log start\n      data.start_time_elapsed = jsPsych.totalTime();\n    },\n    trial_duration: () => trialTimes.getCurrentTrial('fixation'),\n    on_finish: function(data) {\n      data.keylog = keyLogger.keyLog;\n      data.presentation_duration = this.trial_duration;\n\n      document.removeEventListener(\"keyup\", keyLogger.logger);\n    }\n  }\n\n  return fixation;\n}\n\nfunction getTarget(staircase) {\n  const target = {\n    type: \"html-keyboard-response\",\n    stimulus: '<div style=\"display: block; height: 80px; width: 80px; background: #666; border-radius: 50%;\"></div>',\n    choices: ['Space'],\n    data: {target: true},\n    on_start: ({data}) => {\n      data.start_time_elapsed = jsPsych.totalTime();\n    },\n    trial_duration: () => { return staircase.getValue(); },\n    on_finish: function(data) {\n      data.hit = data.rt ? true : false;\n      data.presentation_duration = this.trial_duration;\n      // staircase.addResponse(data.hit);\n      // if (staircase.stairs.numReversals >= NUM_REVERSALS) {\n      //   jsPsych.endExperiment(\"Hit max reversals: \", staircase.stairs.numReversals)\n      //   closeFullscreen()\n      // }\n    }\n  }\n  return target;\n}\n\n\nfunction getBlank1(trialTimes) {\n  let keyLogger = null;\n  const blank1 = {\n    type: \"html-keyboard-response\",\n    stimulus: '<div></div>',\n    response_ends_trial: false,\n    data: {blank1: true},\n    on_start: ({data}) => {\n      keyLogger = new KeyLogger();\n      document.addEventListener(\"keyup\", keyLogger.logger);\n\n      // log start\n      data.start_time_elapsed = jsPsych.totalTime();\n    },\n    trial_duration: () => {\n      const timelineData = jsPsych.data.getLastTimelineData();\n      const targetData = JSON.parse(\n        timelineData.filter({target: true}).json()\n      ).pop();\n      if (targetData.rt) {\n        return 1000 - parseInt(targetData.rt);\n      }\n      else {\n        return 1000 - targetData.presentation_duration;\n      }\n    },\n    on_finish: function(data) {\n      data.presentation_duration = this.trial_duration;\n      const timelineData = jsPsych.data.getLastTimelineData();\n      const targetData = JSON.parse(\n        timelineData.filter({target: true}).json()\n      ).pop();\n      data.keylog = targetData.rt ? keyLogger.keyLog.slice(1) : keyLogger.keyLog;\n\n      document.removeEventListener(\"keyup\", keyLogger.logger);\n    }\n  }\n\n  return blank1;\n}\n\nfunction getFeedback(trialTimes, condition, staircase) {\n  const feedback = {\n    type: \"html-keyboard-response\",\n    stimulus: () => {\n      const timelineData = jsPsych.data.getLastTimelineData();\n\n      const cueData = JSON.parse(\n        timelineData.filter({cue: true}).json()\n      ).pop();\n      const fixationData = JSON.parse(\n        timelineData.filter({fixation: true}).json()\n      ).pop();\n      const targetData = JSON.parse(\n        timelineData.filter({target: true}).json()\n      ).pop();\n      const blank1Data = JSON.parse(\n        timelineData.filter({blank1: true}).json()\n      ).pop();\n      \n      // DETECT CHEATING\n      let autolose = false;\n      const noResponse = (!fixationData.rt && !targetData.rt && !blank1Data.rt)\n      const doubleTap = (targetData.rt && blank1Data.rt);\n      if (fixationData.keylog.length || blank1Data.keylog.length > 1 || doubleTap || noResponse) {\n        autolose = true;\n      }\n      \n      const pointVal = cueData.point_value.toFixed(2); \n\n      let message = targetData.hit ? \"WIN!\" : \"LOSE!\";\n      let mark = targetData.hit ? checkMark : xMark;\n      if (autolose) {\n        message = \"LOSE!\";\n        mark = xMark;\n      }\n      let feedback = condition.type === 'points' ? `pts ` : `$`;\n      feedback += pointVal + ' ';\n      feedback += mark;\n\n      return (\n        `<div class=\"feedback\">` +\n          `<div class=\"feedback-message\">${message}</div>` +\n          `<div class=\"feedback-points\">${feedback}</div>` +\n        `</div>`\n      )\n    },\n    data: { feedback: true },\n    response_ends_trial: false,\n    on_start: ({data}) => {\n      data.start_time_elapsed = jsPsych.totalTime();\n    },\n    on_finish: (data) => {\n      const timelineData = jsPsych.data.getLastTimelineData();\n      const fixationData = JSON.parse(\n        timelineData.filter({fixation: true}).json()\n      ).pop();\n      const targetData = JSON.parse(\n        timelineData.filter({target: true}).json()\n      ).pop();\n      const blank1Data = JSON.parse(\n        timelineData.filter({blank1: true}).json()\n      ).pop();\n\n      // DETECT CHEATING\n      let autolose = false;\n      const noResponse = (!fixationData.rt && !targetData.rt && !blank1Data.rt)\n      const doubleTap = (targetData.rt && blank1Data.rt);\n      if (fixationData.keylog.length || blank1Data.keylog.length > 1 || doubleTap || noResponse) {\n        autolose = true;\n      }\n\n      data.autolose = autolose;\n      \n      if (!autolose) {\n        staircase.addResponse(targetData.hit);\n      }\n      \n    },\n    trial_duration: () => trialTimes.getCurrentTrial('feedback')\n  }\n  return feedback;\n}\n\nfunction getBlank2(trialTimes, pointsTracker) {\n  const blank2 = {\n    type: \"html-keyboard-response\",\n    stimulus: '<div></div>',\n    response_ends_trial: false,\n    data: {blank2: true},\n    trial_duration: () => trialTimes.getCurrentTrial('blank2'),\n    on_start: ({data}) => {\n      data.start_time_elapsed = jsPsych.totalTime();\n    },\n    on_finish: function(data) {\n      data.presentation_duration = this.trial_duration;\n\n      const timelineData = jsPsych.data.getLastTimelineData();\n      const cueData = JSON.parse(\n        timelineData.filter({cue: true}).json()\n      ).pop();\n      const fixationData = JSON.parse(\n        timelineData.filter({fixation: true}).json()\n      ).pop();\n      const targetData = JSON.parse(\n        timelineData.filter({target: true}).json()\n      ).pop();\n      const blank1Data = JSON.parse(\n        timelineData.filter({blank1: true}).json()\n      ).pop();\n\n      // DETECT CHEATING\n      if (targetData.hit && \n        !(fixationData.keylog.length || blank1Data.keylog.length >= 2)) {\n          pointsTracker.addValue(cueData.point_value);\n      }\n      pointsTracker.incrementIndex();\n      trialTimes.incrementTrialIndex();\n      \n    }\n  };\n  return blank2;\n}\n\nfunction getInitFullscreen() {\n  const fullscreen = {\n    type: 'fullscreen',\n    data: { init_fullscreen: true},\n    message: () => { return (\n      `<p>The experiment will now go fullscreen.</p>` +\n      `<p>Click \"Begin\" when you are ready.</p>`\n    )},\n    button_label: \"Begin\",\n    on_finish: (data) => {\n      const elem = document.getElementById('jspsych-experiment');\n      elem.classList.add(\"fullscreen\");\n      elem.focus();\n    }\n  }\n  return fullscreen;\n}\n\nfunction getEndFullscreen() {\n  return {\n    type: 'fullscreen',\n    fullscreen_mode: false\n  };\n}\n\nexport {\n  instructionsCopy,\n  getTrialInstructions,\n  getCue,\n  getFixation,\n  getTarget,\n  getBlank1,\n  getFeedback,\n  getBlank2,\n  getInitFullscreen,\n  getEndFullscreen\n}\n","class TrialTimings {\n  trials = []\n\n  /*\n- Cue: 1000 ms\n- Fixation: 1.5 - 3s\n- target: 150 ms -500 ms\n- Blank1: 1s - target\n- Feedback: 2 - 3s\n- Blank2: 2s\n*/\n\n  constructor(settings) {\n    this.trialIndex = 0;\n    this.settings = settings;\n\n    for (let i=0; i< settings.numTrials; i++) {\n      const fixation = this.settings.jitteredTimings[i].fixation;\n      const feedback = this.settings.jitteredTimings[i].feedback;\n      \n      this.trials.push({\n        cue: 1000,\n        fixation: fixation,\n        feedback: feedback,\n        blank2: 500\n      });\n    }\n  }\n\n  getCurrentTrial(section) {\n    return this.trials[this.trialIndex][section];\n  }\n\n  incrementTrialIndex() {\n    this.trialIndex++;\n  }\n}\n\nexport default TrialTimings;","import React, { Component } from 'react';\nimport 'jspsych/jspsych';\nimport 'jspsych/css/jspsych.css';\nimport 'jspsych/plugins/jspsych-html-keyboard-response';\nimport 'jspsych/plugins/jspsych-fullscreen';\nimport './jsPsychPlugins/ms-selection-response';\nimport { collectTrials, collectAssessments } from './experimentUtils';\nimport PointsDistribution from './PointsTracker';\nimport { \n  getTrialInstructions,\n  getCue,\n  getFixation,\n  getTarget,\n  getBlank1,\n  getBlank2,\n  getFeedback,\n  getInitFullscreen,\n  getEndFullscreen\n} from './timelineDefintions';\nimport {\n  getQ1,\n  getQ2,\n  getQ3,\n  getQ4\n} from './blockAssessmentItems';\nimport TrialTimings from './timings';\n\nimport './ExperimentBlock.css';    \n\nconst jsPsych = window.jsPsych;\n\n\nclass ExperimentBlock extends Component {\n  pointsTracker = null;\n\n  getTimeline() {\n    const timeline = [];\n    const { jitteredTimings, block, numTrials, blockIndex } = this.props;    \n    this.pointsTracker = new PointsDistribution({\n      total: 7.50,\n      minValue: 0.05,\n      maxValue: 0.55,\n      numTrials: 25\n    });\n    const trialTimes = new TrialTimings({\n      numTrials,\n      jitteredTimings\n    });\n\n    \n    if (block.init_fullscreen) {\n      const init_fullscreen = getInitFullscreen();\n      timeline.push(init_fullscreen)\n    }\n\n    const instructions = getTrialInstructions(block.condition, blockIndex);\n    const cue = getCue(this.pointsTracker, trialTimes, block.condition);\n    const fixation = getFixation(trialTimes);\n    const target = getTarget(this.props.staircase);\n    const blank1 = getBlank1();\n    const feedback = getFeedback(trialTimes, block.condition, this.props.staircase);\n    const blank2 = getBlank2(trialTimes, this.pointsTracker);\n\n    cue.data.beginTrial = true;\n    blank2.data.endTrial = true;\n    const test_procedure = {\n      timeline: [cue, fixation, target, blank1, feedback, blank2],\n      repetitions: numTrials\n    };\n\n    timeline.push(instructions);\n\n    if (\"pre_block_assessment\" in block) {\n      timeline.push(getQ1(block.condition));\n      timeline.push(getQ2(block));\n    }\n    \n    timeline.push(test_procedure);\n\n    if (\"post_block_assessment\" in block) {\n      timeline.push(getQ3(block.condition, this.pointsTracker));\n      timeline.push(getQ4(block));\n    }\n\n    if (block.end_fullscreen) {\n      const end_fullscreen = getEndFullscreen();\n      timeline.push(end_fullscreen)\n    }\n\n    return timeline;\n  }\n\n  componentDidMount() {\n    this.initExperiment();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.condition !== prevProps.condition) {\n      this.initExperiment()\n    }\n  }\n\n  initExperiment() {\n    jsPsych.init({\n      timeline: this.getTimeline(),\n      on_finish: this.onExperimentFinish.bind(this),\n      display_element: 'jspsych-experiment'\n    });\n    this.experiment.focus();\n  }\n\n  onExperimentFinish() {\n    const trialData = JSON.parse(\n      jsPsych.data.get().json()\n    );\n\n    const trials = collectTrials(trialData);\n    const successTrials = trials.filter(t => t.hit && !t.autolose);\n    // console.log('trials: ', trials);\n    const expData = {\n      trial_data: trials,\n      total_score: this.pointsTracker.currentTotal,\n      success_rate: (successTrials.length / trials.length)\n    }\n    if (\"post_block_assessment\" in this.props.block) {\n      expData.assessments = collectAssessments(trialData);\n    }\n    this.props.submitBlock(expData);\n  }\n\n  render() {\n    console.log(\"block: \", this.props.block);\n    return (\n      <div id=\"jspsych-experiment\" ref={(exp) => { this.experiment = exp }} >Experiment here</div>\n    )\n  }\n}\n\nexport default ExperimentBlock;","\nfunction getQ1(condition) {\n  const q1 = {\n    type: \"ms-selection-response\",\n    prompt: () => {\n      const conditionCopy = {\n        'charity': \"win money for your charity?\",\n        'anti-charity': \"win against your anti-charity?\",\n        'self': \"win money for yourself?\",\n        'points': \"win points?\",\n      }\n      return `How motivated are you right now to ${conditionCopy[condition.type]}`;\n    },\n    labels: ['Not at all', '', 'Somewhat', '', 'Very much'],\n    data: {q1: true},\n    on_finish: function(data) {\n      data.response = data.selection;\n    }\n  };\n\n  return q1;\n}\n\nfunction getQ2(block) {\n  const timeline = [];\n\n  const conditionCopy = {\n    'charity': \"winning for your charity\",\n    'anti-charity': \"winning against your anti-charity\",\n    'self': \"winning money for yourself\",\n    'points': \"winning points\",\n  }\n  const q2questions = {\n    \"q2_a1\": \"do something relaxing or pleasant?\",\n    \"q2_a2\": \"do what you believe in?\",\n    \"q2_b1\": \"pursue a personal ideal?\",\n    \"q2_b2\": \"do something enjoyable?\"\n  };\n\n  // add question for each entry in block.pre_block_assessment\n  Object.keys(block.pre_block_assessment).forEach(k => {\n    if (k !== 'q1') {\n      timeline.push({\n        type: \"ms-selection-response\",\n        prompt: () => {\n          return (\n            `<p>To what degree will ${conditionCopy[block.condition.type]} help you</p>` +\n            `<p>${q2questions[k]}</p>`\n          );\n        },\n        labels: ['Not at all', '', 'Somewhat', '', 'Very much'],\n        data: {[k]: true},\n        on_finish: function(data) {\n          data.response = data.selection;\n        }\n      });\n    }\n    \n  });\n\n  timeline.push({\n    type: \"html-keyboard-response\",\n    stimulus: () => (\n      `<div class=\"halt\">` +\n        `<p>Press any key when you are ready to start the task.</p>` +\n      `</div>`\n    ),\n    data: { halt: true }\n  });\n  return { timeline };\n}\n\nfunction getQ3(condition, pointsTracker) {\n  const q3 = {\n    type: \"ms-selection-response\",\n    prompt: () => {\n      let feedback;\n      const amount = pointsTracker.currentTotal.toFixed(2);\n      switch (condition.type) {\n        case 'self':\n          feedback = `In this block, you earned $${amount} for yourself.`\n          break;\n        case 'points':\n          feedback = `In this block, you earned ${amount} points.`\n          break;\n        case 'charity':\n          feedback = `In this block, you earned $${amount} for your charity.`\n          break;\n        case 'anti-charity':\n          feedback = `In this block, you removed $${amount} from your anti-charity.`\n          break;\n        default:\n          break;\n      }\n\n      return (\n        `<p>${feedback}</p>` +\n        `<p>How satisfied are you with this outcome?</p>`\n      );\n    },\n    labels: ['Not at all', '', 'Somewhat', '', 'Very much'],\n    data: {q3: true},\n    on_finish: function(data) {\n      data.response = data.selection;\n    }\n  };\n\n  return q3;\n}\n\nfunction getQ4(block) {\n  const timeline = [];\n\n  const q4questions = {\n    \"q4_1\": \"pleased / happy\",\n    \"q4_2\": \"that this activity was meaningful / valuable\",\n    \"q4_3\": \"relaxed\",\n    \"q4_4\": \"that I am acting according to my values\"\n  };\n\n  // add question for each entry in block.pre_block_assessment\n  Object.keys(block.post_block_assessment).forEach(k => {\n    if (k !== 'q3') {\n      timeline.push({\n        type: \"ms-selection-response\",\n        prompt: () => {\n          return (\n            `<p>Please rate the extent to which you feel the following at the present moment:</p>` +\n            `<p>I feel ${q4questions[k]}</p>`\n            );\n        },\n        labels: ['Not at all', '', 'Somewhat', '', 'Very much'],\n        data: {[k]: true},\n        on_finish: function(data) {\n          data.response = data.selection;\n        }\n      });\n    }\n    \n  })\n  return { timeline };\n}\n\n\nexport {\n  getQ1,\n  getQ2,\n  getQ3,\n  getQ4\n}","// modified from https://github.com/hadrienj/StaircaseJS/blob/master/Staircase.js\n\nclass DbStaircase {\n  constructor(settings) {\n      if (typeof settings.firstVal===\"undefined\") {\n        throw new Error(\"No firstVal specified for staircase\")\n      }\n      if (typeof settings.down===\"undefined\") {\n        throw new Error(\"No down value specified for staircase\")\n      }\n      if (!Array.isArray(settings.stepSizes)) {\n        throw new Error(\"No array stepSizes specified for staircase.\");\n      }\n\n      this.stepSizes = settings.stepSizes;\n      this.values = [settings.firstVal];\n      this.responses = []; // true for hit, false for miss\n      this.maxValue = settings.maxValue || 500;\n      this.minValue = settings.minValue || 150;\n      this.successiveGood = 0;\n      this.successiveBad = 0;\n      this.n_up = settings.up || 1;\n      this.n_down = settings.down;\n      this.currentStepSizeIndex = 0;\n      this.reversal_indexes = [];\n      this.currentDirection = 0; // 1 for increasing duration, -1 for decreasing duration\n      this.verbosity = settings.verbosity || 0;\n\n      if (this.verbosity) {\n          console.log(`Built ${this.n_up}-up, ${this.n_down}-down staircase.`)\n      }\n  }\n\n  getValue() {\n    const currentVal = this.values[this.values.length - 1];\n    return currentVal;\n  }\n\n  addResponse(resp) {\n    console.log(\"GOT RESPONSE: \", resp);\n    this.responses.push(resp);\n\n    if (resp) {\n        this.successiveBad = 0;\n        this.successiveGood++;\n    }\n    else {\n        this.successiveBad++;\n        this.successiveGood = 0;\n    }\n    this.values.push(this.getNextValue(resp))\n  }\n\n  detectReversal(hit) {\n    if ((!hit && this.currentDirection === -1) || (hit && this.currentDirection === 1)) {\n      this.incrementStepSizeIndex();\n    }\n  }\n\n  getNextValue(hit) {\n    if (!hit && this.successiveBad >= this.n_up) { // get easier\n      this.successiveBad = 0;\n      this.detectReversal(hit);\n      this.currentDirection = 1;\n\n      const newVal = this._nextVal();\n      if (this.verbosity > 0) {\n        console.log(\"Decreasing stair difficulty. Setting new value to \" + newVal + \"ms.\");\n        console.log('=============================');\n      }\n      return newVal;\n    }\n    else if (hit && this.successiveGood >= this.n_down) { // get harder\n      this.successiveGood = 0;\n      this.detectReversal(hit);\n      this.currentDirection = -1;\n\n      const newVal = this._nextVal();\n      if (this.verbosity > 0) {\n        console.log(\"Increasing stair difficulty. Setting new value to \" + newVal + \"ms.\");\n        console.log('=============================');\n      }\n      return newVal;\n    }\n    else {\n      if (this.verbosity > 0) {\n        console.log(\"Maintaining value at \" + this.getValue() + \"ms.\");\n        console.log('=============================');\n      }\n    }\n\n    return this.getValue();\n  }\n\n  _nextVal() {\n    const dB = this.stepSizes[this.currentStepSizeIndex];\n    const oldVal = this.values[this.values.length - 1];\n    const ratio = Math.pow(10, dB/20 * this.currentDirection);\n    const nextVal = oldVal * ratio;\n    return Math.max(Math.min(nextVal, this.maxValue), this.minValue);\n  }\n\n  incrementStepSizeIndex() {\n    this.reversal_indexes.push(this.responses.length); // 1 indexed\n\n    if (this.currentStepSizeIndex < this.stepSizes.length - 1) { \n      this.currentStepSizeIndex++;\n    }\n\n    if (this.verbosity > 0) {\n      console.log('Reversal! next step size: ', this.stepSizes[this.currentStepSizeIndex]);\n    }\n  }\n\n}\n\nexport default DbStaircase;\n","import React, { Component } from 'react';\nimport ExperimentBlock from '../ExperimentBlock/ExperimentBlock';\nimport { shuffle, randomFromInterval } from '../ExperimentBlock/experimentUtils';\nimport DBStaircase from '../ExperimentBlock/staircase';\nimport jitteredTimings from '../../settings/exp_jittered_timings.json';\n\nconst NUM_TRIALS = 3;\nconst FULLSCREEN = true;\n\nclass ExperimentManager extends Component {\n  state = {\n    blocks: [],\n    blockIndex: 0,\n    tempResults: null\n  }\n  staircase = null;\n\n  constructor(props) {\n    super(props);\n    // this.state.blocks = this.randomizeBlocks();\n    /////////////////////////////////////////////\n    // FOR DEBUGGING\n    //\n    // this.state.blocks = this.randomizeBlocks().slice(0,2);\n    const blocks = this.randomizeBlocks();\n    console.log(\"BLOCKS: \", blocks);\n    this.state.blocks = [blocks[0], blocks[7]];\n\n    this.onBlockSubmit = this.onBlockSubmit.bind(this);\n  }\n\n  advanceBlocks() {\n    if (this.state.blockIndex < this.state.blocks.length - 1) {\n      this.props.logAction({\n        completingStep: \"BVT - blockIndex: \" + (this.state.blockIndex + 1)\n      });\n      this.setState({blockIndex: this.state.blockIndex + 1});\n    }\n    else {\n      const data = this.state.blocks.map((b, i) => this.collectBlock(b, i));\n      this.setState({tempResults: data}, () => {\n        this.props.onExperimentFinish(data);\n        this.props.finishStep();\n      });\n    }\n  }\n\n\n  collectBlock(blockData, i) {\n    blockData.block_index = i + 1;\n    blockData.social_issue = blockData.condition.socialIssue ? blockData.condition.socialIssue.title : null;\n    blockData.social_issue_position = blockData.condition.socialIssue ? blockData.condition.socialIssue.position : null;\n    blockData.condition = blockData.condition.type;\n\n    for (let key in blockData.assessments) {\n      blockData[key] = blockData.assessments[key];\n    }\n    [\"init_fullscreen\", \"end_fullscreen\"].forEach(name => {\n      if (name in blockData) {\n        delete blockData[name];\n      }\n    });\n    \n    delete blockData.assessments;\n    delete blockData.pre_block_assessment;\n    delete blockData.post_block_assessment;\n    return blockData;\n  }\n\n\n  onBlockSubmit(blockData) {\n    const blocks = [...this.state.blocks];\n    const finalDuration = blockData.trial_data[blockData.trial_data.length - 1].target_presentation_duration;\n    blocks[this.state.blockIndex].final_points = blockData.total_score;\n    blocks[this.state.blockIndex].final_duration = finalDuration;\n    blocks[this.state.blockIndex].block_trial_data = blockData.trial_data;\n    blocks[this.state.blockIndex].success_rate = blockData.success_rate;\n    blocks[this.state.blockIndex].assessments = blockData.assessments;\n\n    // set next block starting_duration;\n    if (this.state.blockIndex < blocks.length - 1) {\n      blocks[this.state.blockIndex + 1].starting_duration = this.staircase.values.pop();\n    }\n\n    this.setState({blocks});\n    this.advanceBlocks();\n  }\n\n  getBlockAssessments(condition, blocks) {\n    const prevAssessment = blocks.filter(b => b.condition.type === condition.type).pop();\n    \n    let intra_condition_1;\n    if (prevAssessment) {\n      intra_condition_1 = Object.keys(prevAssessment.pre_block_assessment).includes('q2_b1') ? 'a' : 'b';\n    } else {\n      intra_condition_1 = randomFromInterval(0, 2) ? 'a' : 'b';\n    }\n    let pre_block = {q1: null};\n    let post_block = {q3: null};\n    [1,2].forEach(n => {pre_block[`q2_${intra_condition_1}${n}`] = null});\n    [1,2,3,4].forEach(n => {post_block[`q4_${n}`] = null});\n\n    return {\n      pre_block,\n      post_block\n    };\n  }\n\n  randomizeBlocks() { // todo: rename to initBlocks\n    console.log(\"socialIssue: \", this.props.socialIssue);\n    // throw Error(\"randomizeBlocks\")\n    let conditions = shuffle(['self', 'anti-charity', 'charity', 'points']);\n    let newConditions = shuffle(['self', 'anti-charity', 'charity', 'points']);\n    while (newConditions[0] === conditions[conditions.length - 1]) {\n      newConditions = shuffle(newConditions);\n    }\n    conditions = conditions.concat(newConditions);\n\n    let blocks = [];\n    conditions.forEach(c => {\n      let condition = {\n        type: c,\n        socialIssue: ['charity', 'anti-charity'].includes(c) ? this.props.socialIssue : null\n      };\n\n      const assessments = this.getBlockAssessments(condition, blocks);\n      blocks.push({\n        starting_duration: null,\n        condition: condition,\n        final_duration: null,\n        block_trial_data: {},\n        final_points: null,\n        pre_block_assessment: assessments.pre_block,\n        post_block_assessment: assessments.post_block,\n      });\n    });\n    blocks[0].starting_duration = this.props.starting_duration;\n\n    if (FULLSCREEN) {\n      blocks[0].init_fullscreen = true;\n      blocks[blocks.length - 1].end_fullscreen = true;\n    }\n    return blocks;\n  }\n\n  render() {\n    console.log('blocks: ', this.state.blocks);\n\n    if (this.state.tempResults) {\n      return (<div><pre>{JSON.stringify(this.state.tempResults, null, 2)}</pre></div>);\n    }\n    \n    this.staircase = new DBStaircase({\n      firstVal: this.state.blocks[this.state.blockIndex].starting_duration,\n      down: 2,\n      stepSizes: [2, 2, 1],\n      verbosity: 1\n    });\n\n    return (\n      <div>\n        <ExperimentBlock\n          submitBlock={this.onBlockSubmit} \n          jitteredTimings={jitteredTimings}\n          staircase={this.staircase}\n          block={this.state.blocks[this.state.blockIndex]}\n          condition={this.state.blocks[this.state.blockIndex].condition}\n          numTrials={NUM_TRIALS}\n          blockIndex={this.state.blockIndex}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ExperimentManager;\n","import React from 'react';\nimport './Debriefing.css';\n\n\nclass Debriefing extends React.Component {\n  state = {\n    copied: false\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.setTokenInClibboard = this.setTokenInClibboard.bind(this);\n  }\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate(prevProps, nextProps) {\n    if (!prevProps.mturkToken && this.props.mturkToken) {\n      this.setState({submitting: false});\n    }\n  }\n\n  setTokenInClibboard() {\n    const { mturkToken } = this.props;\n    const el = document.createElement('textarea');\n    el.value = mturkToken;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    \n    this.setState({copied: true});\n  }\n\n  render() {\n    const totals = {\n      'self': 0,\n      'charity': 0,\n      'anti-charity': 0,\n      'points': 0\n    }\n    this.props.expData && this.props.expData.forEach(block => {\n      totals[block.condition] += block.final_points;\n    });\n\n    const { mturkToken } = this.props;\n    return (\n      <div className=\"debrief container\">\n\n        <div className=\"debrief-header\">\n            <h3>University of Toronto</h3>\n            <hr />\n            <span>Department of Psychology</span><br />\n            <span>UNIVERSITY OF TORONTO, TORONTO, ONTARIO, CANADA M5S 3G3</span>\n            <div className=\"header-copy\">\n              <p>Thank you for your participation in the study: Validation of the Hedonic and Eudaimonic Incentive Delay Task!</p>\n              <p>Information about the study, your final earnings, and your unique MTurk participation code for this study will be displayed in the following debriefing information section.</p>\n              <p>Please copy paste your MTurk participation code (displayed below in this debriefing section) to Mechanical Turk to redeem your final earnings for your participation. The additional money you earned during the HEID task will be added at a later date (within 5 business days).</p>\n              <p>You might want to save your MTurk participation code and time/date of participation in case of potential errors.</p>\n            </div>\n        </div>\n\n        \n        <h4>\n          Debriefing Information\n        </h4>\n        <p>\n          Your responses will allow us to validate this task as a neuroimaging measure of “motivation and positive emotion” functioning, and examine in the future whether responses to pleasant and meaningful experiences influence the development and maintenance of depression. Overall, this task will contribute to the field of affective science and help us understand the depressed brain. This research is being supervised by a board certified and licensed clinical psychologist (Dr. Zindel Segal) and a leading research in Affective Neuroscience (Dr. Norman Farb). \n        </p>\n\n        <h4>\n        Total earnings\n        </h4>\n        <p>\n          <span className=\"bold\">Self:</span> ${totals['self'].toFixed(2)}<br />\n          <span className=\"bold\">Charity:</span> ${totals['charity'].toFixed(2)}<br />\n          <span className=\"bold\">Anti-Charity:</span> ${totals['anti-charity'].toFixed(2)}<br />\n          <span className=\"bold\">Points:</span> {totals['points'].toFixed(2)}<br />\n        </p>\n\n        <p>The total money earned for yourself will be added to your MTURK account at the end of your participation in this study. Charity donations will be provided at the closure of this study (Date: August 31, 2019). The total donated to each charity at the end of this study ultimately depend on your performance. The more you won in the Charity and Anti-Charity game rounds, the more likely your charity will win donation money and your anti-charity will not at the end of the study. </p>\n\n        <h4>\n          <span className=\"\">Final Remarks</span>\n        </h4>\n\n        <p>We ask that you do not disclose any information about this experiment, especially anything on this debriefing form, to any of your peers or colleagues, as we do not want any prior knowledge of our participants to bias the results of our study. This can ultimately lead to the publication of non-credible data. We thank you in advance for your cooperation.</p>\n\n        <p>Please note that your results will be de-identified and not tied to your personal information. Should you express any concern as a result of completing any part of the study, please contact: \n          &nbsp;<a rel=\"noopener noreferrer\" href=\"mailto: eudaimonic.reward@gmail.com\" target=\"_blank\">eudaimonic.reward@gmail.com</a>. \n          If you have any further questions about the study, you may contact Dr. Norman Farb at \n          &nbsp;<a rel=\"noopener noreferrer\" href=\"mailto: norman.farb@utoronto.ca\" target=\"_blank\">norman.farb@utoronto.ca</a> \n          or Le-Anh Dinh-Williams at \n          &nbsp;<a rel=\"noopener noreferrer\" href=\"mailto: eudaimonic.reward@gmail.com\" target=\"_blank\">eudaimonic.reward@gmail.com</a>. \n          If you would like to receive updates on the study, please leave your email address in the text box and updates will be provided.\n        </p>\n        <p className=\"centered\">\n          <b>Thank you again for participating!</b>\n        </p>\n\n        <h4>\n          MTurk Participation Code\n        </h4>\n        <p>\n          Your participation code to redeem your final earnings should appear here. The additional money you earned during the HEID task will be added at a later date (within 5 business days). Email \n          &nbsp;<a rel=\"noopener noreferrer\" href=\"mailto: eudaimonic.reward@gmail.com\" target=\"_blank\">eudaimonic.reward@gmail.com</a> if there are any issues regarding your participation:\n        </p>\n\n        <div className=\"debrief-submit\">\n          {mturkToken && (\n            <p className=\"mturkToken\">\n              {mturkToken}\n              <span \n                className={`copy-to-clipboard ` + (this.state.copied ? 'copied' : '')}\n                onClick={this.setTokenInClibboard}\n                >\n                  { this.state.copied ? 'Copied' : 'Copy'}\n                </span>\n            </p>\n          )}\n        </div>\n\n        <p className=\"bold italic\">\n          For more background information on the study, please read the following section:</p>\n        <p>\n          Depression is among the most common mental disorder, affecting an estimated 1 in 4 Canadians during their lifetime. Despite these rates, we still have a poor understanding of what psychological and biological processes may be promoting the development and maintenance of the disorder. One of the leading models of depression emphasizes that the way patients respond to a pleasant event - such that they are less likely to enjoy something typically viewed as enjoyable (e.g., eating, winning money) – predicts the onset of symptoms and the likelihood of staying depressed for a longer period of time. Despite these findings, we still have an incomplete science of depression. We have yet to examine how depressed individuals respond to all types of positive experiences. Most of these studies are based on Hedonic rewards, which are positive events that are rewarding in the short-term because they provide pleasure and relaxation. No study to date has examined how individuals respond to long-term and more meaningful sources of positive emotions, termed Eudaimonic rewards. Examples include: feeling good when you do something you believe in (authenticity) or that is meaningful to you (e.g., succeeding at school/work). \n        </p>\n        <p>\n          In this study, you were asked to indicate a social issue that was important to you and complete game in which you fought to gain money for yourself (hedonic reward), to increase, by up to $15, how much money will be donated to a charity supporting the social issue of importance to you (eudaimonic reward), and to decrease, by up to $15, how much money will be donated to a charity that opposes the social issue of importance to you, similar to “fighting for good and against evil” (eudaimonic reward). Your responses will allow us to validate this task as a measure of hedonic and eudaimonic rewards, and examine whether responses to pleasant and meaningful experiences influence the development and maintenance of depression. This task will contribute to the field of affective science and be adapted for neuroimaging studies to examine the depressed brain. \n        </p>\n      </div>\n    )\n  }\n\n}\n\nexport default Debriefing\n","import React from 'react';\nimport imgSrc from './ajax-loader.gif';\nimport './Spinner.css';\n\n\nconst Spinner = (props) => (\n  <div className=\"loadingSpinner\">\n    <img src={imgSrc} alt=\"Loading...\" />\n  </div>\n)\n\n\nexport default Spinner;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Landing from './Landing';\nimport QualityCheckSurvey from '../QualityCheckSurvey/QualityCheckSurvey';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport BVTIntro from '../BVTIntro/BVTIntro';\nimport ExpIntro from '../ExpIntro/ExpIntro';\nimport ExperimentBlock from '../ExperimentBlock/ExperimentBlock';\nimport ExperimentManager from '../ExperimentManager/ExperimentManager';\nimport Debriefing from '../Debriefing/Debriefing';\nimport Spinner from '../Loading/Spinner';\n\nimport jitteredTimings from '../../settings/exp_jittered_timings.json';\nimport DBStaircase from '../ExperimentBlock/staircase';\nimport { getMeanForLast, shuffle } from '../ExperimentBlock/experimentUtils';\nimport issues from '../../settings/issues.json';\n\nconst MISSED_TRIAL_MODIFIER = 150;\nconst STUDY_ID = '101';\nconst FILEPATH = 'q_submissions';\n\nclass TaskManager extends Component {\n  state = {\n    steps: [],\n    stepIndex: 0,\n    practiceData: null,\n    authentication: null,\n    experimentData: null,\n    qCheckSurveyData: null,\n    submittingData: false,\n    submittingError: false,\n    noConsent: false,\n    qUserID: null,\n    urlParams: null,\n    loadingError: false\n  }\n\n  defaultSettings = {\n    \"steps\": [\n        \"landing\",\n        \"BVTIntro\",\n        \"practice\",\n        \"ExpIntro\",\n        \"experiment\",\n        \"debriefing\",\n        \"finished\"\n    ],\n    \"initialStepIndex\": 0\n  }\n  practiceStaircase = null;\n\n  constructor(props) {\n    super(props);\n\n    this.state.steps = this.defaultSettings.steps;\n    this.state.stepIndex = this.defaultSettings.initialStepIndex;\n\n    this.onPracticeSubmit = this.onPracticeSubmit.bind(this);\n    this.advanceStep = this.advanceStep.bind(this);\n    this.setIssue = this.setIssue.bind(this);\n    this.experimentSubmit = this.experimentSubmit.bind(this);\n    this.submitExpData = this.submitExpData.bind(this);\n    this.beforeUnload = this.beforeUnload.bind(this);\n    this.logAction = this.logAction.bind(this);\n    this.submitUrlParameters = this.submitUrlParameters.bind(this);\n\n    // temp for no SVT\n    // this.socialIssue = this.getSocialIssue({title: 'Vegetarianism', position: -42});\n\n\n\n\n\n\n\n\n\n\n    // this.state.experimentData = import from ./stubExpData\n    this.state.allowUnload = false;\n\n\n\n\n\n\n\n\n\n\n    this.state.allowPublicSubmit = true;\n  }\n\n  beforeUnload(e) {\n    if (this.state.allowUnload) return;\n\n    console.log(\"unoading!!!\", e);\n    e.preventDefault();\n    e.returnValue = '';\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"beforeunload\", this.beforeUnload);\n\n    \n  }\n\n  setIssue(issue) {\n    this.socialIssue = this.getSocialIssue(issue);\n  }\n\n  advanceStep() {\n    if (this.state.stepIndex < this.state.steps.length - 1) {\n      \n      const { qUserID } = this.state;\n      if (qUserID) {\n        console.log(\"LOGGING!!!!!!!!\")\n        this.logAction({\n          completingStep: this.currentStep()\n        });\n      }\n\n      this.setState({stepIndex: this.state.stepIndex + 1});\n    }\n  }\n\n  getSocialIssue(iss) {\n    const socialIssue = issues.filter(i => i.title === iss.title).pop();\n\n    const pos1 = iss.position.replace(\"FOR \", \"\")\n    let position = 0;\n    if (pos1 == socialIssue.position_statements.for_statement) {\n      position = 1;\n    }\n    else if (pos1 == socialIssue.position_statements.alternate_statement) {\n      position = -1;\n    }\n    else {\n      throw Error(`No matching position statement for \"${pos1}\" and issue \"${iss.title}\" `)\n    }\n\n  \n    const issue = {\n      'title': socialIssue.title,\n      'position': position,\n      'position_statements': socialIssue.position_statements\n    }\n    return issue;\n  }\n\n  submitUrlParameters(urlParams) {\n    // console.log(\"get url: \", {SocialIssue, Position});\n    const socialIssue = this.getSocialIssue({\n      title: urlParams.Social,\n      position: urlParams.Position\n    });\n\n    this.setState({ \n      urlParams,\n      socialIssue,\n      qUserID: urlParams.ID\n    }, async () => {\n      const response = await this.qtrixStart()\n      if (!(\"mturkID\" in response.data)) {\n        throw Error(\"no mturkID in response\");\n      }\n      this.setState({mturkID: response.data.mturkID});\n      this.logAction({ \n        message: 'successful landing',\n        ...urlParams,\n        mturkID: response.data.mturkID\n      });\n    });\n  }\n\n  onPracticeSubmit(practiceData) {\n    // const staircaseValues = [...this.practiceStaircase.values];\n    // last value unused\n    // staircaseValues.pop();\n    // practiceData.duration_calc1 = getMeanForLast(staircaseValues, 5);\n\n    // let rt_sum = 0;\n    // let rt_min = null;\n    practiceData.rt_min = null;\n    practiceData.trial_data.forEach(t => {\n      \n      if (!practiceData.rt_min || t.overall_rt < practiceData.rt_min) practiceData.rt_min = t.overall_rt;\n    });\n    // practiceData.duration_calc2 = rt_sum / practiceData.trial_data.length;\n    // practiceData.duration_calc3 = Math.min(...staircaseValues);\n    // practiceData.duration_calc4 = rt_min;\n    this.setState({practiceData});\n\n    // console.log(\"practiceData: \", practiceData);\n    \n    // // Advance to expInto.\n    this.advanceStep();\n  }\n\n  experimentSubmit(expData) {\n    console.log(\"Submitted exp with: \", expData);\n    this.setState({experimentData: expData}, () => {\n      this.submitExpData();\n\n    });\n  }\n\n\n  async qtrixStart() {\n    if (!this.state.qUserID) {\n      console.log('no userID. Skipping qtrix start: ');\n      return;\n    }\n\n    const DATA_API_URL = \"https://6rn8zjuxgg.execute-api.us-east-1.amazonaws.com/dev/radlab-heid-qualtrix-start\";\n    const postData = {\n      \"study_id\": STUDY_ID,\n      \"qUserID\": this.state.qUserID\n    }\n    try {\n      const response = await axios.post(DATA_API_URL, postData);\n      return response;\n    } catch(error) {\n      const response = error.response || error;\n      console.log(\"got error: \", response);\n      return response; \n    }\n\n  }\n\n  async logAction(action) {\n    if (!this.state.qUserID) {\n      console.log('no qUserID. Skipping action: ', action);\n      return;\n    }\n\n    const DATA_API_URL = \"https://6rn8zjuxgg.execute-api.us-east-1.amazonaws.com/dev/qualtrix-log/\";\n    const postData = {\n      \"study_id\": STUDY_ID,\n      \"action\": {...action, timezoneOffset: new Date().getTimezoneOffset()},\n      \"qUserID\": this.state.qUserID,\n      \"log_filename\": `${FILEPATH}/{participantId}/participant-{participantId}-log.json`\n    }\n    try {\n      const response = await axios.post(DATA_API_URL, postData);\n      return response;\n    } catch(error) {\n      const response = error.response || error;\n      console.log(\"got error: \", response);\n      return response; \n    }\n\n  }\n\n  async submitData(postData) {\n    this.setState({submittingData: true});\n    // const DATA_API_URL = \"https://6rn8zjuxgg.execute-api.us-east-1.amazonaws.com/dev/submit-pubdata/\";\n    const DATA_API_URL = \"https://6rn8zjuxgg.execute-api.us-east-1.amazonaws.com/dev/radlab-heid-qualtrix-submit-data/\";\n\n    if (this.state.authentication || this.state.allowPublicSubmit) {\n      if (!this.state.allowPublicSubmit) {\n        axios.defaults.headers.common['Authorization'] = this.state.authentication.token;\n      }\n      try {\n        const response = await axios.post(DATA_API_URL, postData);\n        await this.setState({\n          submittingData: false,\n          submittingError: false\n        });\n        return response;\n      } catch(error) {\n        const response = error.response || error;\n        await this.setState({\n          submittingData: false,\n          submittingError: response\n        });\n        return response;    \n      }\n    }\n    else {\n      console.log(\"No authentication. Not storing anything to server.\");\n    }\n  }\n\n  async submitExpData() {\n    const trialData = []\n    // const blockData = []\n\n    this.state.experimentData.forEach(data => {\n      data.block_trial_data.forEach(tdata => {\n        tdata.trial_index = tdata.index;\n        delete tdata.index;\n        const block_data = JSON.parse(JSON.stringify(data))\n        delete block_data.block_trial_data;\n        trialData.push({...tdata, ...block_data});\n      });\n    });\n\n    \n    const postData = {\n      submission: {\n        'trial_data': {\n          'type': 'bucket',\n          'filename': '{participantId}/participant-{participantId}-trials.{timestamp}.csv',\n          'filepath': 'q_submissions',\n          'filetype': 'csv',\n          'data': trialData\n        }\n      },\n      qUserID: this.state.qUserID,\n      study_id: STUDY_ID\n    }\n\n    console.log(\"about to submit\", postData);\n    const response = await this.submitData(postData);\n    console.log(\"finished submitting data with: \", response);\n\n    window.removeEventListener(\"beforeunload\", this.beforeUnload);\n  }\n  \n  currentStep() {\n    return this.state.steps[this.state.stepIndex];\n  }\n\n  render() {\n\n    if (this.state.submittingData) {\n      return (\n        <div className=\"container submittingData\">\n          <div className=\"vertical-center\">\n            <p>Please wait while your data is submitted.</p>\n            <Spinner />\n          </div>            \n        </div>\n      )\n    }\n\n    if (this.state.submittingError) {\n      return (\n        <div className=\"container submittingError\">\n          <div className=\"vertical-center\">\n            <p>There was an error and your data could not be submitted.</p>\n            <pre>{JSON.stringify(this.state.submittingError, null, 2)}</pre>\n          </div>\n        </div>\n      )\n    }\n\n\n    if (this.currentStep() === 'landing') {\n      return (\n        <Landing submitUrlParameters={this.submitUrlParameters} finishStep={this.advanceStep} />\n      )\n    }\n\n\n    if (this.currentStep() === 'BVTIntro') {\n\n      return (\n        <div className=\"container copyPage\">\n          <BVTIntro socialIssue={this.state.socialIssue} completeIntro={this.advanceStep} />\n        </div>\n      );\n    }\n\n    if (this.currentStep() === 'practice') {\n  \n\n      this.practiceStaircase = new DBStaircase({\n        firstVal: 400,\n        down: 1,\n        stepSizes: [4, 2, 1],\n        verbosity: 1\n      });\n      return (\n        <ExperimentBlock \n          submitBlock={this.onPracticeSubmit} \n          jitteredTimings={jitteredTimings}\n          staircase={this.practiceStaircase}\n          block={{condition: {type: 'practice'}}}\n          numTrials={3}\n          />\n      );\n    }\n\n    if (this.currentStep() === 'ExpIntro') {\n      return (\n        <div className=\"container copyPage\">\n          <ExpIntro advanceStep={this.advanceStep} />\n        </div>\n      );\n    }\n\n    if (this.currentStep() === 'experiment') {\n      let starting_duration = this.state.practiceData ? this.state.practiceData.rt_min : 400;\n      return (\n        <ExperimentManager\n          starting_duration={starting_duration}\n          socialIssue={this.state.socialIssue}\n          onExperimentFinish={this.experimentSubmit}\n          finishStep={this.advanceStep}\n          logAction={this.logAction} \n          />\n      );\n    }\n\n    if (this.currentStep() === 'debriefing') {\n      return (\n        <Debriefing\n          expData={this.state.experimentData}\n          debriefSubmit={this.debriefSubmit}\n          mturkToken={this.state.mturkID}\n        />\n      );\n    }\n\n   \n    return (\n      <ErrorPage debugInfo={{\n        msg: \"No step matching current index.\",\n        steps: this.state.steps,\n        showing: this.state.steps[this.state.stepIndex],\n        index: this.state.stepIndex\n      }} />\n    );\n    \n  }\n\n  showResults(data) {\n    return (\n      <div className=\"container\">\n        <h2>Results from this section:</h2>\n        <p>\n          <button onClick={this.advanceStep}>Continue</button>\n        </p>\n        \n        <div className=\"showResults\">\n          <pre>{JSON.stringify(data, null, 2)}</pre>\n        </div>\n        \n      </div>\n    );\n  }\n}\n\nexport default TaskManager;","import React, { Component } from 'react';\nimport TaskManager from './components/TaskManager/TaskManager';\n\nimport './App.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <TaskManager />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}